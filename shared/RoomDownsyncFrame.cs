// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: room_downsync_frame.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace shared {

  /// <summary>Holder for reflection information generated from room_downsync_frame.proto</summary>
  public static partial class RoomDownsyncFrameReflection {

    #region Descriptor
    /// <summary>File descriptor for room_downsync_frame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomDownsyncFrameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlyb29tX2Rvd25zeW5jX2ZyYW1lLnByb3RvEgZzaGFyZWQi3gYKEUNoYXJh",
            "Y3RlckRvd25zeW5jEgoKAmlkGAEgASgFEhQKDHZpcnR1YWxHcmlkWBgCIAEo",
            "BRIUCgx2aXJ0dWFsR3JpZFkYAyABKAUSDAoEZGlyWBgEIAEoBRIMCgRkaXJZ",
            "GAUgASgFEgwKBHZlbFgYBiABKAUSDAoEdmVsWRgHIAEoBRINCgVzcGVlZBgI",
            "IAEoBRIRCglzcGVjaWVzSWQYCSABKAUSEQoJam9pbkluZGV4GAogASgFEhcK",
            "D2ZyYW1lc1RvUmVjb3ZlchgLIAEoBRIZChFjYXB0dXJlZEJ5SW5lcnRpYRgM",
            "IAEoCBIbChNjYXB0dXJlZEJ5UGF0cm9sQ3VlGA0gASgIEhkKEWZyYW1lc0lu",
            "UGF0cm9sQ3VlGA4gASgFEhAKCGJlYXRzQ250GA8gASgFEhEKCWJlYXRlbkNu",
            "dBgQIAEoBRIKCgJocBgRIAEoBRINCgVtYXhIcBgSIAEoBRIKCgJtcBgTIAEo",
            "BRINCgVtYXhNcBgUIAEoBRIuCg5jaGFyYWN0ZXJTdGF0ZRgWIAEoDjIWLnNo",
            "YXJlZC5DaGFyYWN0ZXJTdGF0ZRIXCg9mcmFtZXNJbkNoU3RhdGUYFyABKAUS",
            "DQoFaW5BaXIYGCABKAgSFQoNanVtcFRyaWdnZXJlZBgZIAEoCBIOCgZvbldh",
            "bGwYGiABKAgSEwoLb25XYWxsTm9ybVgYGyABKAUSEwoLb25XYWxsTm9ybVkY",
            "HCABKAUSGwoTcmV2aXZhbFZpcnR1YWxHcmlkWBgdIAEoBRIbChNyZXZpdmFs",
            "VmlydHVhbEdyaWRZGB4gASgFEhMKC29taXRHcmF2aXR5GB8gASgIEhQKDG9t",
            "aXRQdXNoYmFjaxggIAEoCBIWCg1hY3RpdmVTa2lsbElkGIAIIAEoBRIXCg5h",
            "Y3RpdmVTa2lsbEhpdBiBCCABKAUSGQoQZnJhbWVzSW52aW5zaWJsZRiCCCAB",
            "KAUSFQoMYnVsbGV0VGVhbUlkGIMIIAEoBRIaChFjaENvbGxpc2lvblRlYW1J",
            "ZBiECCABKAUSGgoRY29sbGlzaW9uVHlwZU1hc2sYhQggASgEEg0KBG5hbWUY",
            "5QcgASgJEhQKC2Rpc3BsYXlOYW1lGOYHIAEoCRIPCgZhdmF0YXIY5wcgASgJ",
            "IlEKEUlucHV0RnJhbWVEZWNvZGVkEgoKAmR4GAEgASgFEgoKAmR5GAIgASgF",
            "EhEKCWJ0bkFMZXZlbBgDIAEoBRIRCglidG5CTGV2ZWwYBCABKAUiTAoQSW5w",
            "dXRGcmFtZVVwc3luYxIUCgxpbnB1dEZyYW1lSWQYASABKAUSDwoHZW5jb2Rl",
            "ZBgCIAEoBBIRCglqb2luSW5kZXgYAyABKAUiVAoSSW5wdXRGcmFtZURvd25z",
            "eW5jEhQKDGlucHV0RnJhbWVJZBgBIAEoBRIRCglpbnB1dExpc3QYAiADKAQS",
            "FQoNY29uZmlybWVkTGlzdBgDIAEoBCK2AQoFV3NSZXESEAoIcGxheWVySWQY",
            "ASABKAUSCwoDYWN0GAIgASgFEhEKCWpvaW5JbmRleBgDIAEoBRIVCg1hY2tp",
            "bmdGcmFtZUlkGAQgASgFEhoKEmFja2luZ0lucHV0RnJhbWVJZBgFIAEoBRIP",
            "CgdhdXRoS2V5GAYgASgFEjcKFWlucHV0RnJhbWVVcHN5bmNCYXRjaBgHIAMo",
            "CzIYLnNoYXJlZC5JbnB1dEZyYW1lVXBzeW5jIrkBChNJbnB1dEJ1ZmZlclNu",
            "YXBzaG90EhgKEHJlZlJlbmRlckZyYW1lSWQYASABKAUSFwoPdW5jb25maXJt",
            "ZWRNYXNrGAIgASgEEj0KGXRvU2VuZElucHV0RnJhbWVEb3duc3luY3MYAyAD",
            "KAsyGi5zaGFyZWQuSW5wdXRGcmFtZURvd25zeW5jEhkKEXNob3VsZEZvcmNl",
            "UmVzeW5jGAQgASgIEhUKDXBlZXJKb2luSW5kZXgYBSABKAUixwEKCVBhdHJv",
            "bEN1ZRINCgVmbEFjdBgBIAEoBBINCgVmckFjdBgCIAEoBBIXCg9mbENhcHR1",
            "cmVGcmFtZXMYAyABKAQSFwoPZnJDYXB0dXJlRnJhbWVzGAQgASgEEg0KBWZk",
            "QWN0GAUgASgEEg0KBWZ1QWN0GAYgASgEEhcKD2ZkQ2FwdHVyZUZyYW1lcxgH",
            "IAEoBBIXCg9mdUNhcHR1cmVGcmFtZXMYCCABKAQSGgoRY29sbGlzaW9uVHlw",
            "ZU1hc2sYhQggASgEIlQKCVZpc2lvbkJveBITCgtib3R0b21MZWZ0WBgBIAEo",
            "BRITCgtib3R0b21MZWZ0WRgCIAEoBRINCgV3aWR0aBgDIAEoBRIOCgZoZWln",
            "aHQYBCABKAUi4wQKDEJ1bGxldENvbmZpZxIVCg1zdGFydHVwRnJhbWVzGAEg",
            "ASgFEhoKEmNhbmNlbGxhYmxlU3RGcmFtZRgCIAEoBRIaChJjYW5jZWxsYWJs",
            "ZUVkRnJhbWUYAyABKAUSFAoMYWN0aXZlRnJhbWVzGAQgASgFEhUKDWhpdFN0",
            "dW5GcmFtZXMYBSABKAUSFwoPYmxvY2tTdHVuRnJhbWVzGAYgASgFEhQKDHB1",
            "c2hiYWNrVmVsWBgHIAEoBRIUCgxwdXNoYmFja1ZlbFkYCCABKAUSDgoGZGFt",
            "YWdlGAkgASgFEhQKDHNlbGZMb2NrVmVsWBgKIAEoBRIUCgxzZWxmTG9ja1Zl",
            "bFkYCyABKAUSFQoNaGl0Ym94T2Zmc2V0WBgMIAEoBRIVCg1oaXRib3hPZmZz",
            "ZXRZGA0gASgFEhMKC2hpdGJveFNpemVYGA4gASgFEhMKC2hpdGJveFNpemVZ",
            "GA8gASgFEg4KBmJsb3dVcBgQIAEoCBIRCglzcGVjaWVzSWQYESABKAUSFwoP",
            "ZXhwbG9zaW9uRnJhbWVzGBIgASgFEiEKBWJUeXBlGBMgASgOMhIuc2hhcmVk",
            "LkJ1bGxldFR5cGUSDQoFc3BlZWQYFCABKAUSPgoNY2FuY2VsVHJhbnNpdBgV",
            "IAMoCzInLnNoYXJlZC5CdWxsZXRDb25maWcuQ2FuY2VsVHJhbnNpdEVudHJ5",
            "EhoKEWNvbGxpc2lvblR5cGVNYXNrGIUIIAEoBBo0ChJDYW5jZWxUcmFuc2l0",
            "RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASKRAQoQQnVs",
            "bGV0QmF0dGxlQXR0chIVCg1idWxsZXRMb2NhbElkGAEgASgFEh8KF29yaWdp",
            "bmF0ZWRSZW5kZXJGcmFtZUlkGAIgASgFEhkKEW9mZmVuZGVySm9pbkluZGV4",
            "GAMgASgFEg4KBnRlYW1JZBgEIAEoBRIaChFjb2xsaXNpb25UeXBlTWFzaxiF",
            "CCABKAQihQIKBkJ1bGxldBIkCgdibFN0YXRlGAEgASgOMhMuc2hhcmVkLkJ1",
            "bGxldFN0YXRlEhcKD2ZyYW1lc0luQmxTdGF0ZRgCIAEoBRIsCgpiYXR0bGVB",
            "dHRyGAMgASgLMhguc2hhcmVkLkJ1bGxldEJhdHRsZUF0dHISJAoGY29uZmln",
            "GAQgASgLMhQuc2hhcmVkLkJ1bGxldENvbmZpZxIVCgx2aXJ0dWFsR3JpZFgY",
            "5wcgASgFEhUKDHZpcnR1YWxHcmlkWRjoByABKAUSDQoEZGlyWBjpByABKAUS",
            "DQoEZGlyWRjqByABKAUSDQoEdmVsWBjrByABKAUSDQoEdmVsWRjsByABKAUi",
            "OAoLUGVlclVkcEFkZHISCgoCaXAYASABKAkSDAoEcG9ydBgCIAEoBRIPCgdh",
            "dXRoS2V5GAMgASgFIsUDChJCYXR0bGVDb2xsaWRlckluZm8SEQoJc3RhZ2VO",
            "YW1lGAEgASgJEhMKC2JvdW5kUm9vbUlkGAIgASgFEhwKFGJhdHRsZUR1cmF0",
            "aW9uRnJhbWVzGAMgASgDEiYKHmlucHV0RnJhbWVVcHN5bmNEZWxheVRvbGVy",
            "YW5jZRgEIAEoBRInCh9tYXhDaGFzaW5nUmVuZGVyRnJhbWVzUGVyVXBkYXRl",
            "GAUgASgFEiEKGXJvbGxiYWNrRXN0aW1hdGVkRHRNaWxsaXMYBiABKAESIAoY",
            "cm9sbGJhY2tFc3RpbWF0ZWREdE5hbm9zGAcgASgDEhgKEHJlbmRlckJ1ZmZl",
            "clNpemUYCCABKAUSGAoQY29sbGlzaW9uTWluU3RlcBgJIAEoBRIZChFib3Vu",
            "ZFJvb21DYXBhY2l0eRgKIAEoBRIbChNwcmVhbGxvY05wY0NhcGFjaXR5GAsg",
            "ASgFEh4KFnByZWFsbG9jQnVsbGV0Q2FwYWNpdHkYDCABKAUSLQoPYmF0dGxl",
            "VWRwVHVubmVsGIAIIAEoCzITLnNoYXJlZC5QZWVyVWRwQWRkchIYCg9mcmFt",
            "ZUxvZ0VuYWJsZWQYgQggASgIIqEDChFSb29tRG93bnN5bmNGcmFtZRIKCgJp",
            "ZBgBIAEoBRItCgpwbGF5ZXJzQXJyGAIgAygLMhkuc2hhcmVkLkNoYXJhY3Rl",
            "ckRvd25zeW5jEhYKDmNvdW50ZG93bk5hbm9zGAMgASgDEh8KB2J1bGxldHMY",
            "BCADKAsyDi5zaGFyZWQuQnVsbGV0EioKB25wY3NBcnIYBSADKAsyGS5zaGFy",
            "ZWQuQ2hhcmFjdGVyRG93bnN5bmMSKwoIdHJhcHNBcnIYBiADKAsyGS5zaGFy",
            "ZWQuQ2hhcmFjdGVyRG93bnN5bmMSHwoWYmFja2VuZFVuY29uZmlybWVkTWFz",
            "axiACCABKAQSGgoRc2hvdWxkRm9yY2VSZXN5bmMYgQggASgIEhYKDXNwZWNp",
            "ZXNJZExpc3QYggggAygFEh0KFGJ1bGxldExvY2FsSWRDb3VudGVyGIMIIAEo",
            "BRItCg9wZWVyVWRwQWRkckxpc3QYhAggAygLMhMuc2hhcmVkLlBlZXJVZHBB",
            "ZGRyEhwKE3BhcnRpY2lwYW50Q2hhbmdlSWQYhQggASgFItwBCgZXc1Jlc3AS",
            "CwoDcmV0GAEgASgFEgsKA2FjdBgCIAEoBRImCgNyZGYYAyABKAsyGS5zaGFy",
            "ZWQuUm9vbURvd25zeW5jRnJhbWUSOwoXaW5wdXRGcmFtZURvd25zeW5jQmF0",
            "Y2gYBCADKAsyGi5zaGFyZWQuSW5wdXRGcmFtZURvd25zeW5jEiwKCGJjaUZy",
            "YW1lGAUgASgLMhouc2hhcmVkLkJhdHRsZUNvbGxpZGVySW5mbxIVCg1wZWVy",
            "Sm9pbkluZGV4GAYgASgFEg4KBmVyck1zZxgHIAEoCSKFAgoFU2tpbGwSFQoN",
            "YmF0dGxlTG9jYWxJZBgBIAEoBRIWCg5yZWNvdmVyeUZyYW1lcxgCIAEoBRId",
            "ChVyZWNvdmVyeUZyYW1lc09uQmxvY2sYAyABKAUSGwoTcmVjb3ZlcnlGcmFt",
            "ZXNPbkhpdBgEIAEoBRItCgt0cmlnZ2VyVHlwZRgFIAEoDjIYLnNoYXJlZC5T",
            "a2lsbFRyaWdnZXJUeXBlEiwKDGJvdW5kQ2hTdGF0ZRgGIAEoDjIWLnNoYXJl",
            "ZC5DaGFyYWN0ZXJTdGF0ZRIPCgdtcERlbHRhGAcgASgFEiMKBGhpdHMYgAgg",
            "AygLMhQuc2hhcmVkLkJ1bGxldENvbmZpZyJnCghGcmFtZUxvZxImCgNyZGYY",
            "ASABKAsyGS5zaGFyZWQuUm9vbURvd25zeW5jRnJhbWUSMwoPYWN0dWFsbHlV",
            "c2VkSWRmGAIgASgLMhouc2hhcmVkLklucHV0RnJhbWVEb3duc3luYyo1CgtC",
            "dWxsZXRTdGF0ZRILCgdTdGFydFVwEAASCgoGQWN0aXZlEAESDQoJRXhwbG9k",
            "aW5nEAIqrgIKDkNoYXJhY3RlclN0YXRlEgkKBUlkbGUxEAASCwoHV2Fsa2lu",
            "ZxABEg4KClR1cm5Bcm91bmQQAhIKCgZBdGtlZDEQAxIUChBJbkFpcklkbGUx",
            "Tm9KdW1wEAQSFAoQSW5BaXJJZGxlMUJ5SnVtcBAFEhgKFEluQWlySWRsZTFC",
            "eVdhbGxKdW1wEAYSDwoLSW5BaXJBdGtlZDEQBxIMCghCbG93blVwMRAIEgwK",
            "CExheURvd24xEAkSCgoGR2V0VXAxEAoSCQoFRHlpbmcQCxILCgdEYXNoaW5n",
            "EAwSCgoGT25XYWxsEA0SDgoJSW5BaXJBdGsxEIAIEgkKBEF0azEQgQgSCQoE",
            "QXRrMhCCCBIJCgRBdGszEIMIEgkKBEF0azQQhAgSCQoEQXRrNRCFCCo3CgpC",
            "dWxsZXRUeXBlEhAKDFVuZGV0ZXJtaW5lZBAAEgkKBU1lbGVlEAESDAoIRmly",
            "ZWJhbGwQAiozChBTa2lsbFRyaWdnZXJUeXBlEg4KClJpc2luZ0VkZ2UQABIP",
            "CgtGYWxsaW5nRWRnZRABQgmqAgZzaGFyZWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::shared.BulletState), typeof(global::shared.CharacterState), typeof(global::shared.BulletType), typeof(global::shared.SkillTriggerType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.CharacterDownsync), global::shared.CharacterDownsync.Parser, new[]{ "Id", "VirtualGridX", "VirtualGridY", "DirX", "DirY", "VelX", "VelY", "Speed", "SpeciesId", "JoinIndex", "FramesToRecover", "CapturedByInertia", "CapturedByPatrolCue", "FramesInPatrolCue", "BeatsCnt", "BeatenCnt", "Hp", "MaxHp", "Mp", "MaxMp", "CharacterState", "FramesInChState", "InAir", "JumpTriggered", "OnWall", "OnWallNormX", "OnWallNormY", "RevivalVirtualGridX", "RevivalVirtualGridY", "OmitGravity", "OmitPushback", "ActiveSkillId", "ActiveSkillHit", "FramesInvinsible", "BulletTeamId", "ChCollisionTeamId", "CollisionTypeMask", "Name", "DisplayName", "Avatar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.InputFrameDecoded), global::shared.InputFrameDecoded.Parser, new[]{ "Dx", "Dy", "BtnALevel", "BtnBLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.InputFrameUpsync), global::shared.InputFrameUpsync.Parser, new[]{ "InputFrameId", "Encoded", "JoinIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.InputFrameDownsync), global::shared.InputFrameDownsync.Parser, new[]{ "InputFrameId", "InputList", "ConfirmedList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.WsReq), global::shared.WsReq.Parser, new[]{ "PlayerId", "Act", "JoinIndex", "AckingFrameId", "AckingInputFrameId", "AuthKey", "InputFrameUpsyncBatch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.InputBufferSnapshot), global::shared.InputBufferSnapshot.Parser, new[]{ "RefRenderFrameId", "UnconfirmedMask", "ToSendInputFrameDownsyncs", "ShouldForceResync", "PeerJoinIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.PatrolCue), global::shared.PatrolCue.Parser, new[]{ "FlAct", "FrAct", "FlCaptureFrames", "FrCaptureFrames", "FdAct", "FuAct", "FdCaptureFrames", "FuCaptureFrames", "CollisionTypeMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.VisionBox), global::shared.VisionBox.Parser, new[]{ "BottomLeftX", "BottomLeftY", "Width", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.BulletConfig), global::shared.BulletConfig.Parser, new[]{ "StartupFrames", "CancellableStFrame", "CancellableEdFrame", "ActiveFrames", "HitStunFrames", "BlockStunFrames", "PushbackVelX", "PushbackVelY", "Damage", "SelfLockVelX", "SelfLockVelY", "HitboxOffsetX", "HitboxOffsetY", "HitboxSizeX", "HitboxSizeY", "BlowUp", "SpeciesId", "ExplosionFrames", "BType", "Speed", "CancelTransit", "CollisionTypeMask" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.BulletBattleAttr), global::shared.BulletBattleAttr.Parser, new[]{ "BulletLocalId", "OriginatedRenderFrameId", "OffenderJoinIndex", "TeamId", "CollisionTypeMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.Bullet), global::shared.Bullet.Parser, new[]{ "BlState", "FramesInBlState", "BattleAttr", "Config", "VirtualGridX", "VirtualGridY", "DirX", "DirY", "VelX", "VelY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.PeerUdpAddr), global::shared.PeerUdpAddr.Parser, new[]{ "Ip", "Port", "AuthKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.BattleColliderInfo), global::shared.BattleColliderInfo.Parser, new[]{ "StageName", "BoundRoomId", "BattleDurationFrames", "InputFrameUpsyncDelayTolerance", "MaxChasingRenderFramesPerUpdate", "RollbackEstimatedDtMillis", "RollbackEstimatedDtNanos", "RenderBufferSize", "CollisionMinStep", "BoundRoomCapacity", "PreallocNpcCapacity", "PreallocBulletCapacity", "BattleUdpTunnel", "FrameLogEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.RoomDownsyncFrame), global::shared.RoomDownsyncFrame.Parser, new[]{ "Id", "PlayersArr", "CountdownNanos", "Bullets", "NpcsArr", "TrapsArr", "BackendUnconfirmedMask", "ShouldForceResync", "SpeciesIdList", "BulletLocalIdCounter", "PeerUdpAddrList", "ParticipantChangeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.WsResp), global::shared.WsResp.Parser, new[]{ "Ret", "Act", "Rdf", "InputFrameDownsyncBatch", "BciFrame", "PeerJoinIndex", "ErrMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.Skill), global::shared.Skill.Parser, new[]{ "BattleLocalId", "RecoveryFrames", "RecoveryFramesOnBlock", "RecoveryFramesOnHit", "TriggerType", "BoundChState", "MpDelta", "Hits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::shared.FrameLog), global::shared.FrameLog.Parser, new[]{ "Rdf", "ActuallyUsedIdf" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BulletState {
    [pbr::OriginalName("StartUp")] StartUp = 0,
    [pbr::OriginalName("Active")] Active = 1,
    [pbr::OriginalName("Exploding")] Exploding = 2,
  }

  public enum CharacterState {
    [pbr::OriginalName("Idle1")] Idle1 = 0,
    [pbr::OriginalName("Walking")] Walking = 1,
    [pbr::OriginalName("TurnAround")] TurnAround = 2,
    [pbr::OriginalName("Atked1")] Atked1 = 3,
    [pbr::OriginalName("InAirIdle1NoJump")] InAirIdle1NoJump = 4,
    [pbr::OriginalName("InAirIdle1ByJump")] InAirIdle1ByJump = 5,
    [pbr::OriginalName("InAirIdle1ByWallJump")] InAirIdle1ByWallJump = 6,
    [pbr::OriginalName("InAirAtked1")] InAirAtked1 = 7,
    [pbr::OriginalName("BlownUp1")] BlownUp1 = 8,
    [pbr::OriginalName("LayDown1")] LayDown1 = 9,
    [pbr::OriginalName("GetUp1")] GetUp1 = 10,
    [pbr::OriginalName("Dying")] Dying = 11,
    [pbr::OriginalName("Dashing")] Dashing = 12,
    [pbr::OriginalName("OnWall")] OnWall = 13,
    [pbr::OriginalName("InAirAtk1")] InAirAtk1 = 1024,
    [pbr::OriginalName("Atk1")] Atk1 = 1025,
    [pbr::OriginalName("Atk2")] Atk2 = 1026,
    [pbr::OriginalName("Atk3")] Atk3 = 1027,
    [pbr::OriginalName("Atk4")] Atk4 = 1028,
    [pbr::OriginalName("Atk5")] Atk5 = 1029,
  }

  public enum BulletType {
    [pbr::OriginalName("Undetermined")] Undetermined = 0,
    [pbr::OriginalName("Melee")] Melee = 1,
    [pbr::OriginalName("Fireball")] Fireball = 2,
  }

  public enum SkillTriggerType {
    [pbr::OriginalName("RisingEdge")] RisingEdge = 0,
    [pbr::OriginalName("FallingEdge")] FallingEdge = 1,
  }

  #endregion

  #region Messages
  public sealed partial class CharacterDownsync : pb::IMessage<CharacterDownsync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterDownsync> _parser = new pb::MessageParser<CharacterDownsync>(() => new CharacterDownsync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterDownsync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterDownsync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterDownsync(CharacterDownsync other) : this() {
      id_ = other.id_;
      virtualGridX_ = other.virtualGridX_;
      virtualGridY_ = other.virtualGridY_;
      dirX_ = other.dirX_;
      dirY_ = other.dirY_;
      velX_ = other.velX_;
      velY_ = other.velY_;
      speed_ = other.speed_;
      speciesId_ = other.speciesId_;
      joinIndex_ = other.joinIndex_;
      framesToRecover_ = other.framesToRecover_;
      capturedByInertia_ = other.capturedByInertia_;
      capturedByPatrolCue_ = other.capturedByPatrolCue_;
      framesInPatrolCue_ = other.framesInPatrolCue_;
      beatsCnt_ = other.beatsCnt_;
      beatenCnt_ = other.beatenCnt_;
      hp_ = other.hp_;
      maxHp_ = other.maxHp_;
      mp_ = other.mp_;
      maxMp_ = other.maxMp_;
      characterState_ = other.characterState_;
      framesInChState_ = other.framesInChState_;
      inAir_ = other.inAir_;
      jumpTriggered_ = other.jumpTriggered_;
      onWall_ = other.onWall_;
      onWallNormX_ = other.onWallNormX_;
      onWallNormY_ = other.onWallNormY_;
      revivalVirtualGridX_ = other.revivalVirtualGridX_;
      revivalVirtualGridY_ = other.revivalVirtualGridY_;
      omitGravity_ = other.omitGravity_;
      omitPushback_ = other.omitPushback_;
      activeSkillId_ = other.activeSkillId_;
      activeSkillHit_ = other.activeSkillHit_;
      framesInvinsible_ = other.framesInvinsible_;
      bulletTeamId_ = other.bulletTeamId_;
      chCollisionTeamId_ = other.chCollisionTeamId_;
      collisionTypeMask_ = other.collisionTypeMask_;
      name_ = other.name_;
      displayName_ = other.displayName_;
      avatar_ = other.avatar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterDownsync Clone() {
      return new CharacterDownsync(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "virtualGridX" field.</summary>
    public const int VirtualGridXFieldNumber = 2;
    private int virtualGridX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VirtualGridX {
      get { return virtualGridX_; }
      set {
        virtualGridX_ = value;
      }
    }

    /// <summary>Field number for the "virtualGridY" field.</summary>
    public const int VirtualGridYFieldNumber = 3;
    private int virtualGridY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VirtualGridY {
      get { return virtualGridY_; }
      set {
        virtualGridY_ = value;
      }
    }

    /// <summary>Field number for the "dirX" field.</summary>
    public const int DirXFieldNumber = 4;
    private int dirX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirX {
      get { return dirX_; }
      set {
        dirX_ = value;
      }
    }

    /// <summary>Field number for the "dirY" field.</summary>
    public const int DirYFieldNumber = 5;
    private int dirY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirY {
      get { return dirY_; }
      set {
        dirY_ = value;
      }
    }

    /// <summary>Field number for the "velX" field.</summary>
    public const int VelXFieldNumber = 6;
    private int velX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VelX {
      get { return velX_; }
      set {
        velX_ = value;
      }
    }

    /// <summary>Field number for the "velY" field.</summary>
    public const int VelYFieldNumber = 7;
    private int velY_;
    /// <summary>
    /// "velX" and "velY" is used to record the accumulated effect by inertia and accelerations (including gravity)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VelY {
      get { return velY_; }
      set {
        velY_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 8;
    private int speed_;
    /// <summary>
    /// this is the instantaneous scalar attribute of a character, different from but will be accounted in "velX" and "velY"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "speciesId" field.</summary>
    public const int SpeciesIdFieldNumber = 9;
    private int speciesId_;
    /// <summary>
    /// For evolution during battle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeciesId {
      get { return speciesId_; }
      set {
        speciesId_ = value;
      }
    }

    /// <summary>Field number for the "joinIndex" field.</summary>
    public const int JoinIndexFieldNumber = 10;
    private int joinIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinIndex {
      get { return joinIndex_; }
      set {
        joinIndex_ = value;
      }
    }

    /// <summary>Field number for the "framesToRecover" field.</summary>
    public const int FramesToRecoverFieldNumber = 11;
    private int framesToRecover_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesToRecover {
      get { return framesToRecover_; }
      set {
        framesToRecover_ = value;
      }
    }

    /// <summary>Field number for the "capturedByInertia" field.</summary>
    public const int CapturedByInertiaFieldNumber = 12;
    private bool capturedByInertia_;
    /// <summary>
    /// like "inAir", it’s by design a standalone field only inferred by the calc result of "applyInputFrameDownsyncDynamicsOnSingleRenderFrame" instead of "characterState"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CapturedByInertia {
      get { return capturedByInertia_; }
      set {
        capturedByInertia_ = value;
      }
    }

    /// <summary>Field number for the "capturedByPatrolCue" field.</summary>
    public const int CapturedByPatrolCueFieldNumber = 13;
    private bool capturedByPatrolCue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CapturedByPatrolCue {
      get { return capturedByPatrolCue_; }
      set {
        capturedByPatrolCue_ = value;
      }
    }

    /// <summary>Field number for the "framesInPatrolCue" field.</summary>
    public const int FramesInPatrolCueFieldNumber = 14;
    private int framesInPatrolCue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesInPatrolCue {
      get { return framesInPatrolCue_; }
      set {
        framesInPatrolCue_ = value;
      }
    }

    /// <summary>Field number for the "beatsCnt" field.</summary>
    public const int BeatsCntFieldNumber = 15;
    private int beatsCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BeatsCnt {
      get { return beatsCnt_; }
      set {
        beatsCnt_ = value;
      }
    }

    /// <summary>Field number for the "beatenCnt" field.</summary>
    public const int BeatenCntFieldNumber = 16;
    private int beatenCnt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BeatenCnt {
      get { return beatenCnt_; }
      set {
        beatenCnt_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 17;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "maxHp" field.</summary>
    public const int MaxHpFieldNumber = 18;
    private int maxHp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxHp {
      get { return maxHp_; }
      set {
        maxHp_ = value;
      }
    }

    /// <summary>Field number for the "mp" field.</summary>
    public const int MpFieldNumber = 19;
    private int mp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Mp {
      get { return mp_; }
      set {
        mp_ = value;
      }
    }

    /// <summary>Field number for the "maxMp" field.</summary>
    public const int MaxMpFieldNumber = 20;
    private int maxMp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMp {
      get { return maxMp_; }
      set {
        maxMp_ = value;
      }
    }

    /// <summary>Field number for the "characterState" field.</summary>
    public const int CharacterStateFieldNumber = 22;
    private global::shared.CharacterState characterState_ = global::shared.CharacterState.Idle1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.CharacterState CharacterState {
      get { return characterState_; }
      set {
        characterState_ = value;
      }
    }

    /// <summary>Field number for the "framesInChState" field.</summary>
    public const int FramesInChStateFieldNumber = 23;
    private int framesInChState_;
    /// <summary>
    /// number of frames elapsed in the current character state   
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesInChState {
      get { return framesInChState_; }
      set {
        framesInChState_ = value;
      }
    }

    /// <summary>Field number for the "inAir" field.</summary>
    public const int InAirFieldNumber = 24;
    private bool inAir_;
    /// <summary>
    /// by design a standalone field only inferred by the collision result of "applyInputFrameDownsyncDynamicsOnSingleRenderFrame" instead of "characterState", because we need check the transition for "characterState" from this field, i.e. "inAir (prev -> curr)"  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InAir {
      get { return inAir_; }
      set {
        inAir_ = value;
      }
    }

    /// <summary>Field number for the "jumpTriggered" field.</summary>
    public const int JumpTriggeredFieldNumber = 25;
    private bool jumpTriggered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool JumpTriggered {
      get { return jumpTriggered_; }
      set {
        jumpTriggered_ = value;
      }
    }

    /// <summary>Field number for the "onWall" field.</summary>
    public const int OnWallFieldNumber = 26;
    private bool onWall_;
    /// <summary>
    /// like "inAir", it’s by design a standalone field only inferred by the collision result of "applyInputFrameDownsyncDynamicsOnSingleRenderFrame" instead of "characterState", because we need check the transition for "characterState" from this field, i.e. "onWall (prev -> curr)"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnWall {
      get { return onWall_; }
      set {
        onWall_ = value;
      }
    }

    /// <summary>Field number for the "onWallNormX" field.</summary>
    public const int OnWallNormXFieldNumber = 27;
    private int onWallNormX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnWallNormX {
      get { return onWallNormX_; }
      set {
        onWallNormX_ = value;
      }
    }

    /// <summary>Field number for the "onWallNormY" field.</summary>
    public const int OnWallNormYFieldNumber = 28;
    private int onWallNormY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnWallNormY {
      get { return onWallNormY_; }
      set {
        onWallNormY_ = value;
      }
    }

    /// <summary>Field number for the "revivalVirtualGridX" field.</summary>
    public const int RevivalVirtualGridXFieldNumber = 29;
    private int revivalVirtualGridX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RevivalVirtualGridX {
      get { return revivalVirtualGridX_; }
      set {
        revivalVirtualGridX_ = value;
      }
    }

    /// <summary>Field number for the "revivalVirtualGridY" field.</summary>
    public const int RevivalVirtualGridYFieldNumber = 30;
    private int revivalVirtualGridY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RevivalVirtualGridY {
      get { return revivalVirtualGridY_; }
      set {
        revivalVirtualGridY_ = value;
      }
    }

    /// <summary>Field number for the "omitGravity" field.</summary>
    public const int OmitGravityFieldNumber = 31;
    private bool omitGravity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OmitGravity {
      get { return omitGravity_; }
      set {
        omitGravity_ = value;
      }
    }

    /// <summary>Field number for the "omitPushback" field.</summary>
    public const int OmitPushbackFieldNumber = 32;
    private bool omitPushback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OmitPushback {
      get { return omitPushback_; }
      set {
        omitPushback_ = value;
      }
    }

    /// <summary>Field number for the "activeSkillId" field.</summary>
    public const int ActiveSkillIdFieldNumber = 1024;
    private int activeSkillId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveSkillId {
      get { return activeSkillId_; }
      set {
        activeSkillId_ = value;
      }
    }

    /// <summary>Field number for the "activeSkillHit" field.</summary>
    public const int ActiveSkillHitFieldNumber = 1025;
    private int activeSkillHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveSkillHit {
      get { return activeSkillHit_; }
      set {
        activeSkillHit_ = value;
      }
    }

    /// <summary>Field number for the "framesInvinsible" field.</summary>
    public const int FramesInvinsibleFieldNumber = 1026;
    private int framesInvinsible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesInvinsible {
      get { return framesInvinsible_; }
      set {
        framesInvinsible_ = value;
      }
    }

    /// <summary>Field number for the "bulletTeamId" field.</summary>
    public const int BulletTeamIdFieldNumber = 1027;
    private int bulletTeamId_;
    /// <summary>
    /// Kindly note that "collisionTypeMask" is NOT GRANULAR ENOUGH for inter-character collision configuration, e.g. same team omission, thus we'd still need the fields "bulletTeamId" and "chCollisionTeamId" here
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletTeamId {
      get { return bulletTeamId_; }
      set {
        bulletTeamId_ = value;
      }
    }

    /// <summary>Field number for the "chCollisionTeamId" field.</summary>
    public const int ChCollisionTeamIdFieldNumber = 1028;
    private int chCollisionTeamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChCollisionTeamId {
      get { return chCollisionTeamId_; }
      set {
        chCollisionTeamId_ = value;
      }
    }

    /// <summary>Field number for the "collisionTypeMask" field.</summary>
    public const int CollisionTypeMaskFieldNumber = 1029;
    private ulong collisionTypeMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CollisionTypeMask {
      get { return collisionTypeMask_; }
      set {
        collisionTypeMask_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 997;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "displayName" field.</summary>
    public const int DisplayNameFieldNumber = 998;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 999;
    private string avatar_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Avatar {
      get { return avatar_; }
      set {
        avatar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterDownsync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterDownsync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (VirtualGridX != other.VirtualGridX) return false;
      if (VirtualGridY != other.VirtualGridY) return false;
      if (DirX != other.DirX) return false;
      if (DirY != other.DirY) return false;
      if (VelX != other.VelX) return false;
      if (VelY != other.VelY) return false;
      if (Speed != other.Speed) return false;
      if (SpeciesId != other.SpeciesId) return false;
      if (JoinIndex != other.JoinIndex) return false;
      if (FramesToRecover != other.FramesToRecover) return false;
      if (CapturedByInertia != other.CapturedByInertia) return false;
      if (CapturedByPatrolCue != other.CapturedByPatrolCue) return false;
      if (FramesInPatrolCue != other.FramesInPatrolCue) return false;
      if (BeatsCnt != other.BeatsCnt) return false;
      if (BeatenCnt != other.BeatenCnt) return false;
      if (Hp != other.Hp) return false;
      if (MaxHp != other.MaxHp) return false;
      if (Mp != other.Mp) return false;
      if (MaxMp != other.MaxMp) return false;
      if (CharacterState != other.CharacterState) return false;
      if (FramesInChState != other.FramesInChState) return false;
      if (InAir != other.InAir) return false;
      if (JumpTriggered != other.JumpTriggered) return false;
      if (OnWall != other.OnWall) return false;
      if (OnWallNormX != other.OnWallNormX) return false;
      if (OnWallNormY != other.OnWallNormY) return false;
      if (RevivalVirtualGridX != other.RevivalVirtualGridX) return false;
      if (RevivalVirtualGridY != other.RevivalVirtualGridY) return false;
      if (OmitGravity != other.OmitGravity) return false;
      if (OmitPushback != other.OmitPushback) return false;
      if (ActiveSkillId != other.ActiveSkillId) return false;
      if (ActiveSkillHit != other.ActiveSkillHit) return false;
      if (FramesInvinsible != other.FramesInvinsible) return false;
      if (BulletTeamId != other.BulletTeamId) return false;
      if (ChCollisionTeamId != other.ChCollisionTeamId) return false;
      if (CollisionTypeMask != other.CollisionTypeMask) return false;
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Avatar != other.Avatar) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (VirtualGridX != 0) hash ^= VirtualGridX.GetHashCode();
      if (VirtualGridY != 0) hash ^= VirtualGridY.GetHashCode();
      if (DirX != 0) hash ^= DirX.GetHashCode();
      if (DirY != 0) hash ^= DirY.GetHashCode();
      if (VelX != 0) hash ^= VelX.GetHashCode();
      if (VelY != 0) hash ^= VelY.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (SpeciesId != 0) hash ^= SpeciesId.GetHashCode();
      if (JoinIndex != 0) hash ^= JoinIndex.GetHashCode();
      if (FramesToRecover != 0) hash ^= FramesToRecover.GetHashCode();
      if (CapturedByInertia != false) hash ^= CapturedByInertia.GetHashCode();
      if (CapturedByPatrolCue != false) hash ^= CapturedByPatrolCue.GetHashCode();
      if (FramesInPatrolCue != 0) hash ^= FramesInPatrolCue.GetHashCode();
      if (BeatsCnt != 0) hash ^= BeatsCnt.GetHashCode();
      if (BeatenCnt != 0) hash ^= BeatenCnt.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (MaxHp != 0) hash ^= MaxHp.GetHashCode();
      if (Mp != 0) hash ^= Mp.GetHashCode();
      if (MaxMp != 0) hash ^= MaxMp.GetHashCode();
      if (CharacterState != global::shared.CharacterState.Idle1) hash ^= CharacterState.GetHashCode();
      if (FramesInChState != 0) hash ^= FramesInChState.GetHashCode();
      if (InAir != false) hash ^= InAir.GetHashCode();
      if (JumpTriggered != false) hash ^= JumpTriggered.GetHashCode();
      if (OnWall != false) hash ^= OnWall.GetHashCode();
      if (OnWallNormX != 0) hash ^= OnWallNormX.GetHashCode();
      if (OnWallNormY != 0) hash ^= OnWallNormY.GetHashCode();
      if (RevivalVirtualGridX != 0) hash ^= RevivalVirtualGridX.GetHashCode();
      if (RevivalVirtualGridY != 0) hash ^= RevivalVirtualGridY.GetHashCode();
      if (OmitGravity != false) hash ^= OmitGravity.GetHashCode();
      if (OmitPushback != false) hash ^= OmitPushback.GetHashCode();
      if (ActiveSkillId != 0) hash ^= ActiveSkillId.GetHashCode();
      if (ActiveSkillHit != 0) hash ^= ActiveSkillHit.GetHashCode();
      if (FramesInvinsible != 0) hash ^= FramesInvinsible.GetHashCode();
      if (BulletTeamId != 0) hash ^= BulletTeamId.GetHashCode();
      if (ChCollisionTeamId != 0) hash ^= ChCollisionTeamId.GetHashCode();
      if (CollisionTypeMask != 0UL) hash ^= CollisionTypeMask.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Avatar.Length != 0) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (VirtualGridX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VirtualGridY);
      }
      if (DirX != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DirX);
      }
      if (DirY != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DirY);
      }
      if (VelX != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VelX);
      }
      if (VelY != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(VelY);
      }
      if (Speed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Speed);
      }
      if (SpeciesId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpeciesId);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(JoinIndex);
      }
      if (FramesToRecover != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(FramesToRecover);
      }
      if (CapturedByInertia != false) {
        output.WriteRawTag(96);
        output.WriteBool(CapturedByInertia);
      }
      if (CapturedByPatrolCue != false) {
        output.WriteRawTag(104);
        output.WriteBool(CapturedByPatrolCue);
      }
      if (FramesInPatrolCue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FramesInPatrolCue);
      }
      if (BeatsCnt != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(BeatsCnt);
      }
      if (BeatenCnt != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BeatenCnt);
      }
      if (Hp != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Hp);
      }
      if (MaxHp != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MaxHp);
      }
      if (Mp != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Mp);
      }
      if (MaxMp != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(MaxMp);
      }
      if (CharacterState != global::shared.CharacterState.Idle1) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) CharacterState);
      }
      if (FramesInChState != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(FramesInChState);
      }
      if (InAir != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(InAir);
      }
      if (JumpTriggered != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(JumpTriggered);
      }
      if (OnWall != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(OnWall);
      }
      if (OnWallNormX != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(OnWallNormX);
      }
      if (OnWallNormY != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(OnWallNormY);
      }
      if (RevivalVirtualGridX != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(RevivalVirtualGridX);
      }
      if (RevivalVirtualGridY != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(RevivalVirtualGridY);
      }
      if (OmitGravity != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(OmitGravity);
      }
      if (OmitPushback != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(OmitPushback);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(170, 62);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(178, 62);
        output.WriteString(DisplayName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(186, 62);
        output.WriteString(Avatar);
      }
      if (ActiveSkillId != 0) {
        output.WriteRawTag(128, 64);
        output.WriteInt32(ActiveSkillId);
      }
      if (ActiveSkillHit != 0) {
        output.WriteRawTag(136, 64);
        output.WriteInt32(ActiveSkillHit);
      }
      if (FramesInvinsible != 0) {
        output.WriteRawTag(144, 64);
        output.WriteInt32(FramesInvinsible);
      }
      if (BulletTeamId != 0) {
        output.WriteRawTag(152, 64);
        output.WriteInt32(BulletTeamId);
      }
      if (ChCollisionTeamId != 0) {
        output.WriteRawTag(160, 64);
        output.WriteInt32(ChCollisionTeamId);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (VirtualGridX != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(VirtualGridY);
      }
      if (DirX != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DirX);
      }
      if (DirY != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DirY);
      }
      if (VelX != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(VelX);
      }
      if (VelY != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(VelY);
      }
      if (Speed != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Speed);
      }
      if (SpeciesId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpeciesId);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(JoinIndex);
      }
      if (FramesToRecover != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(FramesToRecover);
      }
      if (CapturedByInertia != false) {
        output.WriteRawTag(96);
        output.WriteBool(CapturedByInertia);
      }
      if (CapturedByPatrolCue != false) {
        output.WriteRawTag(104);
        output.WriteBool(CapturedByPatrolCue);
      }
      if (FramesInPatrolCue != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(FramesInPatrolCue);
      }
      if (BeatsCnt != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(BeatsCnt);
      }
      if (BeatenCnt != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BeatenCnt);
      }
      if (Hp != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Hp);
      }
      if (MaxHp != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(MaxHp);
      }
      if (Mp != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(Mp);
      }
      if (MaxMp != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(MaxMp);
      }
      if (CharacterState != global::shared.CharacterState.Idle1) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) CharacterState);
      }
      if (FramesInChState != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(FramesInChState);
      }
      if (InAir != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(InAir);
      }
      if (JumpTriggered != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(JumpTriggered);
      }
      if (OnWall != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(OnWall);
      }
      if (OnWallNormX != 0) {
        output.WriteRawTag(216, 1);
        output.WriteInt32(OnWallNormX);
      }
      if (OnWallNormY != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(OnWallNormY);
      }
      if (RevivalVirtualGridX != 0) {
        output.WriteRawTag(232, 1);
        output.WriteInt32(RevivalVirtualGridX);
      }
      if (RevivalVirtualGridY != 0) {
        output.WriteRawTag(240, 1);
        output.WriteInt32(RevivalVirtualGridY);
      }
      if (OmitGravity != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(OmitGravity);
      }
      if (OmitPushback != false) {
        output.WriteRawTag(128, 2);
        output.WriteBool(OmitPushback);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(170, 62);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(178, 62);
        output.WriteString(DisplayName);
      }
      if (Avatar.Length != 0) {
        output.WriteRawTag(186, 62);
        output.WriteString(Avatar);
      }
      if (ActiveSkillId != 0) {
        output.WriteRawTag(128, 64);
        output.WriteInt32(ActiveSkillId);
      }
      if (ActiveSkillHit != 0) {
        output.WriteRawTag(136, 64);
        output.WriteInt32(ActiveSkillHit);
      }
      if (FramesInvinsible != 0) {
        output.WriteRawTag(144, 64);
        output.WriteInt32(FramesInvinsible);
      }
      if (BulletTeamId != 0) {
        output.WriteRawTag(152, 64);
        output.WriteInt32(BulletTeamId);
      }
      if (ChCollisionTeamId != 0) {
        output.WriteRawTag(160, 64);
        output.WriteInt32(ChCollisionTeamId);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (VirtualGridX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VirtualGridY);
      }
      if (DirX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DirX);
      }
      if (DirY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DirY);
      }
      if (VelX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VelX);
      }
      if (VelY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VelY);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (SpeciesId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeciesId);
      }
      if (JoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinIndex);
      }
      if (FramesToRecover != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FramesToRecover);
      }
      if (CapturedByInertia != false) {
        size += 1 + 1;
      }
      if (CapturedByPatrolCue != false) {
        size += 1 + 1;
      }
      if (FramesInPatrolCue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FramesInPatrolCue);
      }
      if (BeatsCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BeatsCnt);
      }
      if (BeatenCnt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BeatenCnt);
      }
      if (Hp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (MaxHp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxHp);
      }
      if (Mp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Mp);
      }
      if (MaxMp != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxMp);
      }
      if (CharacterState != global::shared.CharacterState.Idle1) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CharacterState);
      }
      if (FramesInChState != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FramesInChState);
      }
      if (InAir != false) {
        size += 2 + 1;
      }
      if (JumpTriggered != false) {
        size += 2 + 1;
      }
      if (OnWall != false) {
        size += 2 + 1;
      }
      if (OnWallNormX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OnWallNormX);
      }
      if (OnWallNormY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OnWallNormY);
      }
      if (RevivalVirtualGridX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RevivalVirtualGridX);
      }
      if (RevivalVirtualGridY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RevivalVirtualGridY);
      }
      if (OmitGravity != false) {
        size += 2 + 1;
      }
      if (OmitPushback != false) {
        size += 2 + 1;
      }
      if (ActiveSkillId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActiveSkillId);
      }
      if (ActiveSkillHit != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActiveSkillHit);
      }
      if (FramesInvinsible != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FramesInvinsible);
      }
      if (BulletTeamId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BulletTeamId);
      }
      if (ChCollisionTeamId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ChCollisionTeamId);
      }
      if (CollisionTypeMask != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CollisionTypeMask);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Avatar.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterDownsync other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.VirtualGridX != 0) {
        VirtualGridX = other.VirtualGridX;
      }
      if (other.VirtualGridY != 0) {
        VirtualGridY = other.VirtualGridY;
      }
      if (other.DirX != 0) {
        DirX = other.DirX;
      }
      if (other.DirY != 0) {
        DirY = other.DirY;
      }
      if (other.VelX != 0) {
        VelX = other.VelX;
      }
      if (other.VelY != 0) {
        VelY = other.VelY;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      if (other.SpeciesId != 0) {
        SpeciesId = other.SpeciesId;
      }
      if (other.JoinIndex != 0) {
        JoinIndex = other.JoinIndex;
      }
      if (other.FramesToRecover != 0) {
        FramesToRecover = other.FramesToRecover;
      }
      if (other.CapturedByInertia != false) {
        CapturedByInertia = other.CapturedByInertia;
      }
      if (other.CapturedByPatrolCue != false) {
        CapturedByPatrolCue = other.CapturedByPatrolCue;
      }
      if (other.FramesInPatrolCue != 0) {
        FramesInPatrolCue = other.FramesInPatrolCue;
      }
      if (other.BeatsCnt != 0) {
        BeatsCnt = other.BeatsCnt;
      }
      if (other.BeatenCnt != 0) {
        BeatenCnt = other.BeatenCnt;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.MaxHp != 0) {
        MaxHp = other.MaxHp;
      }
      if (other.Mp != 0) {
        Mp = other.Mp;
      }
      if (other.MaxMp != 0) {
        MaxMp = other.MaxMp;
      }
      if (other.CharacterState != global::shared.CharacterState.Idle1) {
        CharacterState = other.CharacterState;
      }
      if (other.FramesInChState != 0) {
        FramesInChState = other.FramesInChState;
      }
      if (other.InAir != false) {
        InAir = other.InAir;
      }
      if (other.JumpTriggered != false) {
        JumpTriggered = other.JumpTriggered;
      }
      if (other.OnWall != false) {
        OnWall = other.OnWall;
      }
      if (other.OnWallNormX != 0) {
        OnWallNormX = other.OnWallNormX;
      }
      if (other.OnWallNormY != 0) {
        OnWallNormY = other.OnWallNormY;
      }
      if (other.RevivalVirtualGridX != 0) {
        RevivalVirtualGridX = other.RevivalVirtualGridX;
      }
      if (other.RevivalVirtualGridY != 0) {
        RevivalVirtualGridY = other.RevivalVirtualGridY;
      }
      if (other.OmitGravity != false) {
        OmitGravity = other.OmitGravity;
      }
      if (other.OmitPushback != false) {
        OmitPushback = other.OmitPushback;
      }
      if (other.ActiveSkillId != 0) {
        ActiveSkillId = other.ActiveSkillId;
      }
      if (other.ActiveSkillHit != 0) {
        ActiveSkillHit = other.ActiveSkillHit;
      }
      if (other.FramesInvinsible != 0) {
        FramesInvinsible = other.FramesInvinsible;
      }
      if (other.BulletTeamId != 0) {
        BulletTeamId = other.BulletTeamId;
      }
      if (other.ChCollisionTeamId != 0) {
        ChCollisionTeamId = other.ChCollisionTeamId;
      }
      if (other.CollisionTypeMask != 0UL) {
        CollisionTypeMask = other.CollisionTypeMask;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Avatar.Length != 0) {
        Avatar = other.Avatar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            VirtualGridX = input.ReadInt32();
            break;
          }
          case 24: {
            VirtualGridY = input.ReadInt32();
            break;
          }
          case 32: {
            DirX = input.ReadInt32();
            break;
          }
          case 40: {
            DirY = input.ReadInt32();
            break;
          }
          case 48: {
            VelX = input.ReadInt32();
            break;
          }
          case 56: {
            VelY = input.ReadInt32();
            break;
          }
          case 64: {
            Speed = input.ReadInt32();
            break;
          }
          case 72: {
            SpeciesId = input.ReadInt32();
            break;
          }
          case 80: {
            JoinIndex = input.ReadInt32();
            break;
          }
          case 88: {
            FramesToRecover = input.ReadInt32();
            break;
          }
          case 96: {
            CapturedByInertia = input.ReadBool();
            break;
          }
          case 104: {
            CapturedByPatrolCue = input.ReadBool();
            break;
          }
          case 112: {
            FramesInPatrolCue = input.ReadInt32();
            break;
          }
          case 120: {
            BeatsCnt = input.ReadInt32();
            break;
          }
          case 128: {
            BeatenCnt = input.ReadInt32();
            break;
          }
          case 136: {
            Hp = input.ReadInt32();
            break;
          }
          case 144: {
            MaxHp = input.ReadInt32();
            break;
          }
          case 152: {
            Mp = input.ReadInt32();
            break;
          }
          case 160: {
            MaxMp = input.ReadInt32();
            break;
          }
          case 176: {
            CharacterState = (global::shared.CharacterState) input.ReadEnum();
            break;
          }
          case 184: {
            FramesInChState = input.ReadInt32();
            break;
          }
          case 192: {
            InAir = input.ReadBool();
            break;
          }
          case 200: {
            JumpTriggered = input.ReadBool();
            break;
          }
          case 208: {
            OnWall = input.ReadBool();
            break;
          }
          case 216: {
            OnWallNormX = input.ReadInt32();
            break;
          }
          case 224: {
            OnWallNormY = input.ReadInt32();
            break;
          }
          case 232: {
            RevivalVirtualGridX = input.ReadInt32();
            break;
          }
          case 240: {
            RevivalVirtualGridY = input.ReadInt32();
            break;
          }
          case 248: {
            OmitGravity = input.ReadBool();
            break;
          }
          case 256: {
            OmitPushback = input.ReadBool();
            break;
          }
          case 7978: {
            Name = input.ReadString();
            break;
          }
          case 7986: {
            DisplayName = input.ReadString();
            break;
          }
          case 7994: {
            Avatar = input.ReadString();
            break;
          }
          case 8192: {
            ActiveSkillId = input.ReadInt32();
            break;
          }
          case 8200: {
            ActiveSkillHit = input.ReadInt32();
            break;
          }
          case 8208: {
            FramesInvinsible = input.ReadInt32();
            break;
          }
          case 8216: {
            BulletTeamId = input.ReadInt32();
            break;
          }
          case 8224: {
            ChCollisionTeamId = input.ReadInt32();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            VirtualGridX = input.ReadInt32();
            break;
          }
          case 24: {
            VirtualGridY = input.ReadInt32();
            break;
          }
          case 32: {
            DirX = input.ReadInt32();
            break;
          }
          case 40: {
            DirY = input.ReadInt32();
            break;
          }
          case 48: {
            VelX = input.ReadInt32();
            break;
          }
          case 56: {
            VelY = input.ReadInt32();
            break;
          }
          case 64: {
            Speed = input.ReadInt32();
            break;
          }
          case 72: {
            SpeciesId = input.ReadInt32();
            break;
          }
          case 80: {
            JoinIndex = input.ReadInt32();
            break;
          }
          case 88: {
            FramesToRecover = input.ReadInt32();
            break;
          }
          case 96: {
            CapturedByInertia = input.ReadBool();
            break;
          }
          case 104: {
            CapturedByPatrolCue = input.ReadBool();
            break;
          }
          case 112: {
            FramesInPatrolCue = input.ReadInt32();
            break;
          }
          case 120: {
            BeatsCnt = input.ReadInt32();
            break;
          }
          case 128: {
            BeatenCnt = input.ReadInt32();
            break;
          }
          case 136: {
            Hp = input.ReadInt32();
            break;
          }
          case 144: {
            MaxHp = input.ReadInt32();
            break;
          }
          case 152: {
            Mp = input.ReadInt32();
            break;
          }
          case 160: {
            MaxMp = input.ReadInt32();
            break;
          }
          case 176: {
            CharacterState = (global::shared.CharacterState) input.ReadEnum();
            break;
          }
          case 184: {
            FramesInChState = input.ReadInt32();
            break;
          }
          case 192: {
            InAir = input.ReadBool();
            break;
          }
          case 200: {
            JumpTriggered = input.ReadBool();
            break;
          }
          case 208: {
            OnWall = input.ReadBool();
            break;
          }
          case 216: {
            OnWallNormX = input.ReadInt32();
            break;
          }
          case 224: {
            OnWallNormY = input.ReadInt32();
            break;
          }
          case 232: {
            RevivalVirtualGridX = input.ReadInt32();
            break;
          }
          case 240: {
            RevivalVirtualGridY = input.ReadInt32();
            break;
          }
          case 248: {
            OmitGravity = input.ReadBool();
            break;
          }
          case 256: {
            OmitPushback = input.ReadBool();
            break;
          }
          case 7978: {
            Name = input.ReadString();
            break;
          }
          case 7986: {
            DisplayName = input.ReadString();
            break;
          }
          case 7994: {
            Avatar = input.ReadString();
            break;
          }
          case 8192: {
            ActiveSkillId = input.ReadInt32();
            break;
          }
          case 8200: {
            ActiveSkillHit = input.ReadInt32();
            break;
          }
          case 8208: {
            FramesInvinsible = input.ReadInt32();
            break;
          }
          case 8216: {
            BulletTeamId = input.ReadInt32();
            break;
          }
          case 8224: {
            ChCollisionTeamId = input.ReadInt32();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InputFrameDecoded : pb::IMessage<InputFrameDecoded>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputFrameDecoded> _parser = new pb::MessageParser<InputFrameDecoded>(() => new InputFrameDecoded());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputFrameDecoded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDecoded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDecoded(InputFrameDecoded other) : this() {
      dx_ = other.dx_;
      dy_ = other.dy_;
      btnALevel_ = other.btnALevel_;
      btnBLevel_ = other.btnBLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDecoded Clone() {
      return new InputFrameDecoded(this);
    }

    /// <summary>Field number for the "dx" field.</summary>
    public const int DxFieldNumber = 1;
    private int dx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dx {
      get { return dx_; }
      set {
        dx_ = value;
      }
    }

    /// <summary>Field number for the "dy" field.</summary>
    public const int DyFieldNumber = 2;
    private int dy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Dy {
      get { return dy_; }
      set {
        dy_ = value;
      }
    }

    /// <summary>Field number for the "btnALevel" field.</summary>
    public const int BtnALevelFieldNumber = 3;
    private int btnALevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BtnALevel {
      get { return btnALevel_; }
      set {
        btnALevel_ = value;
      }
    }

    /// <summary>Field number for the "btnBLevel" field.</summary>
    public const int BtnBLevelFieldNumber = 4;
    private int btnBLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BtnBLevel {
      get { return btnBLevel_; }
      set {
        btnBLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputFrameDecoded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputFrameDecoded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dx != other.Dx) return false;
      if (Dy != other.Dy) return false;
      if (BtnALevel != other.BtnALevel) return false;
      if (BtnBLevel != other.BtnBLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Dx != 0) hash ^= Dx.GetHashCode();
      if (Dy != 0) hash ^= Dy.GetHashCode();
      if (BtnALevel != 0) hash ^= BtnALevel.GetHashCode();
      if (BtnBLevel != 0) hash ^= BtnBLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Dx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Dx);
      }
      if (Dy != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dy);
      }
      if (BtnALevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BtnALevel);
      }
      if (BtnBLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BtnBLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Dx != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Dx);
      }
      if (Dy != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Dy);
      }
      if (BtnALevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BtnALevel);
      }
      if (BtnBLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BtnBLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Dx != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dx);
      }
      if (Dy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dy);
      }
      if (BtnALevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BtnALevel);
      }
      if (BtnBLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BtnBLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputFrameDecoded other) {
      if (other == null) {
        return;
      }
      if (other.Dx != 0) {
        Dx = other.Dx;
      }
      if (other.Dy != 0) {
        Dy = other.Dy;
      }
      if (other.BtnALevel != 0) {
        BtnALevel = other.BtnALevel;
      }
      if (other.BtnBLevel != 0) {
        BtnBLevel = other.BtnBLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Dx = input.ReadInt32();
            break;
          }
          case 16: {
            Dy = input.ReadInt32();
            break;
          }
          case 24: {
            BtnALevel = input.ReadInt32();
            break;
          }
          case 32: {
            BtnBLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Dx = input.ReadInt32();
            break;
          }
          case 16: {
            Dy = input.ReadInt32();
            break;
          }
          case 24: {
            BtnALevel = input.ReadInt32();
            break;
          }
          case 32: {
            BtnBLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InputFrameUpsync : pb::IMessage<InputFrameUpsync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputFrameUpsync> _parser = new pb::MessageParser<InputFrameUpsync>(() => new InputFrameUpsync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputFrameUpsync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameUpsync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameUpsync(InputFrameUpsync other) : this() {
      inputFrameId_ = other.inputFrameId_;
      encoded_ = other.encoded_;
      joinIndex_ = other.joinIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameUpsync Clone() {
      return new InputFrameUpsync(this);
    }

    /// <summary>Field number for the "inputFrameId" field.</summary>
    public const int InputFrameIdFieldNumber = 1;
    private int inputFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InputFrameId {
      get { return inputFrameId_; }
      set {
        inputFrameId_ = value;
      }
    }

    /// <summary>Field number for the "encoded" field.</summary>
    public const int EncodedFieldNumber = 2;
    private ulong encoded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Encoded {
      get { return encoded_; }
      set {
        encoded_ = value;
      }
    }

    /// <summary>Field number for the "joinIndex" field.</summary>
    public const int JoinIndexFieldNumber = 3;
    private int joinIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinIndex {
      get { return joinIndex_; }
      set {
        joinIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputFrameUpsync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputFrameUpsync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputFrameId != other.InputFrameId) return false;
      if (Encoded != other.Encoded) return false;
      if (JoinIndex != other.JoinIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InputFrameId != 0) hash ^= InputFrameId.GetHashCode();
      if (Encoded != 0UL) hash ^= Encoded.GetHashCode();
      if (JoinIndex != 0) hash ^= JoinIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputFrameId);
      }
      if (Encoded != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Encoded);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputFrameId);
      }
      if (Encoded != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Encoded);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InputFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputFrameId);
      }
      if (Encoded != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Encoded);
      }
      if (JoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputFrameUpsync other) {
      if (other == null) {
        return;
      }
      if (other.InputFrameId != 0) {
        InputFrameId = other.InputFrameId;
      }
      if (other.Encoded != 0UL) {
        Encoded = other.Encoded;
      }
      if (other.JoinIndex != 0) {
        JoinIndex = other.JoinIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputFrameId = input.ReadInt32();
            break;
          }
          case 16: {
            Encoded = input.ReadUInt64();
            break;
          }
          case 24: {
            JoinIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputFrameId = input.ReadInt32();
            break;
          }
          case 16: {
            Encoded = input.ReadUInt64();
            break;
          }
          case 24: {
            JoinIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InputFrameDownsync : pb::IMessage<InputFrameDownsync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputFrameDownsync> _parser = new pb::MessageParser<InputFrameDownsync>(() => new InputFrameDownsync());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputFrameDownsync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDownsync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDownsync(InputFrameDownsync other) : this() {
      inputFrameId_ = other.inputFrameId_;
      inputList_ = other.inputList_.Clone();
      confirmedList_ = other.confirmedList_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputFrameDownsync Clone() {
      return new InputFrameDownsync(this);
    }

    /// <summary>Field number for the "inputFrameId" field.</summary>
    public const int InputFrameIdFieldNumber = 1;
    private int inputFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InputFrameId {
      get { return inputFrameId_; }
      set {
        inputFrameId_ = value;
      }
    }

    /// <summary>Field number for the "inputList" field.</summary>
    public const int InputListFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_inputList_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> inputList_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Indexed by "joinIndex", we try to compress the "single player input" into 1 word (64-bit for 64-bit Golang runtime) because atomic compare-and-swap only works on 1 word. Although CAS on custom struct is possible in C# https://learn.microsoft.com/en-us/dotnet/api/system.threading.interlocked?view=netstandard-2.1, using a single word is still faster whenever possible. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> InputList {
      get { return inputList_; }
    }

    /// <summary>Field number for the "confirmedList" field.</summary>
    public const int ConfirmedListFieldNumber = 3;
    private ulong confirmedList_;
    /// <summary>
    /// Indexed by "joinIndex", same compression concern as above
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong ConfirmedList {
      get { return confirmedList_; }
      set {
        confirmedList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputFrameDownsync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputFrameDownsync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InputFrameId != other.InputFrameId) return false;
      if(!inputList_.Equals(other.inputList_)) return false;
      if (ConfirmedList != other.ConfirmedList) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InputFrameId != 0) hash ^= InputFrameId.GetHashCode();
      hash ^= inputList_.GetHashCode();
      if (ConfirmedList != 0UL) hash ^= ConfirmedList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InputFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputFrameId);
      }
      inputList_.WriteTo(output, _repeated_inputList_codec);
      if (ConfirmedList != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ConfirmedList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InputFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(InputFrameId);
      }
      inputList_.WriteTo(ref output, _repeated_inputList_codec);
      if (ConfirmedList != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(ConfirmedList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InputFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputFrameId);
      }
      size += inputList_.CalculateSize(_repeated_inputList_codec);
      if (ConfirmedList != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ConfirmedList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputFrameDownsync other) {
      if (other == null) {
        return;
      }
      if (other.InputFrameId != 0) {
        InputFrameId = other.InputFrameId;
      }
      inputList_.Add(other.inputList_);
      if (other.ConfirmedList != 0UL) {
        ConfirmedList = other.ConfirmedList;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InputFrameId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            inputList_.AddEntriesFrom(input, _repeated_inputList_codec);
            break;
          }
          case 24: {
            ConfirmedList = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InputFrameId = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            inputList_.AddEntriesFrom(ref input, _repeated_inputList_codec);
            break;
          }
          case 24: {
            ConfirmedList = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WsReq : pb::IMessage<WsReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WsReq> _parser = new pb::MessageParser<WsReq>(() => new WsReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsReq(WsReq other) : this() {
      playerId_ = other.playerId_;
      act_ = other.act_;
      joinIndex_ = other.joinIndex_;
      ackingFrameId_ = other.ackingFrameId_;
      ackingInputFrameId_ = other.ackingInputFrameId_;
      authKey_ = other.authKey_;
      inputFrameUpsyncBatch_ = other.inputFrameUpsyncBatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsReq Clone() {
      return new WsReq(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "act" field.</summary>
    public const int ActFieldNumber = 2;
    private int act_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Act {
      get { return act_; }
      set {
        act_ = value;
      }
    }

    /// <summary>Field number for the "joinIndex" field.</summary>
    public const int JoinIndexFieldNumber = 3;
    private int joinIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinIndex {
      get { return joinIndex_; }
      set {
        joinIndex_ = value;
      }
    }

    /// <summary>Field number for the "ackingFrameId" field.</summary>
    public const int AckingFrameIdFieldNumber = 4;
    private int ackingFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckingFrameId {
      get { return ackingFrameId_; }
      set {
        ackingFrameId_ = value;
      }
    }

    /// <summary>Field number for the "ackingInputFrameId" field.</summary>
    public const int AckingInputFrameIdFieldNumber = 5;
    private int ackingInputFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AckingInputFrameId {
      get { return ackingInputFrameId_; }
      set {
        ackingInputFrameId_ = value;
      }
    }

    /// <summary>Field number for the "authKey" field.</summary>
    public const int AuthKeyFieldNumber = 6;
    private int authKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthKey {
      get { return authKey_; }
      set {
        authKey_ = value;
      }
    }

    /// <summary>Field number for the "inputFrameUpsyncBatch" field.</summary>
    public const int InputFrameUpsyncBatchFieldNumber = 7;
    private static readonly pb::FieldCodec<global::shared.InputFrameUpsync> _repeated_inputFrameUpsyncBatch_codec
        = pb::FieldCodec.ForMessage(58, global::shared.InputFrameUpsync.Parser);
    private readonly pbc::RepeatedField<global::shared.InputFrameUpsync> inputFrameUpsyncBatch_ = new pbc::RepeatedField<global::shared.InputFrameUpsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.InputFrameUpsync> InputFrameUpsyncBatch {
      get { return inputFrameUpsyncBatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Act != other.Act) return false;
      if (JoinIndex != other.JoinIndex) return false;
      if (AckingFrameId != other.AckingFrameId) return false;
      if (AckingInputFrameId != other.AckingInputFrameId) return false;
      if (AuthKey != other.AuthKey) return false;
      if(!inputFrameUpsyncBatch_.Equals(other.inputFrameUpsyncBatch_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Act != 0) hash ^= Act.GetHashCode();
      if (JoinIndex != 0) hash ^= JoinIndex.GetHashCode();
      if (AckingFrameId != 0) hash ^= AckingFrameId.GetHashCode();
      if (AckingInputFrameId != 0) hash ^= AckingInputFrameId.GetHashCode();
      if (AuthKey != 0) hash ^= AuthKey.GetHashCode();
      hash ^= inputFrameUpsyncBatch_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Act != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Act);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinIndex);
      }
      if (AckingFrameId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AckingFrameId);
      }
      if (AckingInputFrameId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckingInputFrameId);
      }
      if (AuthKey != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AuthKey);
      }
      inputFrameUpsyncBatch_.WriteTo(output, _repeated_inputFrameUpsyncBatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Act != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Act);
      }
      if (JoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(JoinIndex);
      }
      if (AckingFrameId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AckingFrameId);
      }
      if (AckingInputFrameId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AckingInputFrameId);
      }
      if (AuthKey != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AuthKey);
      }
      inputFrameUpsyncBatch_.WriteTo(ref output, _repeated_inputFrameUpsyncBatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Act != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Act);
      }
      if (JoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinIndex);
      }
      if (AckingFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckingFrameId);
      }
      if (AckingInputFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AckingInputFrameId);
      }
      if (AuthKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthKey);
      }
      size += inputFrameUpsyncBatch_.CalculateSize(_repeated_inputFrameUpsyncBatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WsReq other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Act != 0) {
        Act = other.Act;
      }
      if (other.JoinIndex != 0) {
        JoinIndex = other.JoinIndex;
      }
      if (other.AckingFrameId != 0) {
        AckingFrameId = other.AckingFrameId;
      }
      if (other.AckingInputFrameId != 0) {
        AckingInputFrameId = other.AckingInputFrameId;
      }
      if (other.AuthKey != 0) {
        AuthKey = other.AuthKey;
      }
      inputFrameUpsyncBatch_.Add(other.inputFrameUpsyncBatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Act = input.ReadInt32();
            break;
          }
          case 24: {
            JoinIndex = input.ReadInt32();
            break;
          }
          case 32: {
            AckingFrameId = input.ReadInt32();
            break;
          }
          case 40: {
            AckingInputFrameId = input.ReadInt32();
            break;
          }
          case 48: {
            AuthKey = input.ReadInt32();
            break;
          }
          case 58: {
            inputFrameUpsyncBatch_.AddEntriesFrom(input, _repeated_inputFrameUpsyncBatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 16: {
            Act = input.ReadInt32();
            break;
          }
          case 24: {
            JoinIndex = input.ReadInt32();
            break;
          }
          case 32: {
            AckingFrameId = input.ReadInt32();
            break;
          }
          case 40: {
            AckingInputFrameId = input.ReadInt32();
            break;
          }
          case 48: {
            AuthKey = input.ReadInt32();
            break;
          }
          case 58: {
            inputFrameUpsyncBatch_.AddEntriesFrom(ref input, _repeated_inputFrameUpsyncBatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InputBufferSnapshot : pb::IMessage<InputBufferSnapshot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InputBufferSnapshot> _parser = new pb::MessageParser<InputBufferSnapshot>(() => new InputBufferSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InputBufferSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputBufferSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputBufferSnapshot(InputBufferSnapshot other) : this() {
      refRenderFrameId_ = other.refRenderFrameId_;
      unconfirmedMask_ = other.unconfirmedMask_;
      toSendInputFrameDownsyncs_ = other.toSendInputFrameDownsyncs_.Clone();
      shouldForceResync_ = other.shouldForceResync_;
      peerJoinIndex_ = other.peerJoinIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InputBufferSnapshot Clone() {
      return new InputBufferSnapshot(this);
    }

    /// <summary>Field number for the "refRenderFrameId" field.</summary>
    public const int RefRenderFrameIdFieldNumber = 1;
    private int refRenderFrameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RefRenderFrameId {
      get { return refRenderFrameId_; }
      set {
        refRenderFrameId_ = value;
      }
    }

    /// <summary>Field number for the "unconfirmedMask" field.</summary>
    public const int UnconfirmedMaskFieldNumber = 2;
    private ulong unconfirmedMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong UnconfirmedMask {
      get { return unconfirmedMask_; }
      set {
        unconfirmedMask_ = value;
      }
    }

    /// <summary>Field number for the "toSendInputFrameDownsyncs" field.</summary>
    public const int ToSendInputFrameDownsyncsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::shared.InputFrameDownsync> _repeated_toSendInputFrameDownsyncs_codec
        = pb::FieldCodec.ForMessage(26, global::shared.InputFrameDownsync.Parser);
    private readonly pbc::RepeatedField<global::shared.InputFrameDownsync> toSendInputFrameDownsyncs_ = new pbc::RepeatedField<global::shared.InputFrameDownsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.InputFrameDownsync> ToSendInputFrameDownsyncs {
      get { return toSendInputFrameDownsyncs_; }
    }

    /// <summary>Field number for the "shouldForceResync" field.</summary>
    public const int ShouldForceResyncFieldNumber = 4;
    private bool shouldForceResync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShouldForceResync {
      get { return shouldForceResync_; }
      set {
        shouldForceResync_ = value;
      }
    }

    /// <summary>Field number for the "peerJoinIndex" field.</summary>
    public const int PeerJoinIndexFieldNumber = 5;
    private int peerJoinIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PeerJoinIndex {
      get { return peerJoinIndex_; }
      set {
        peerJoinIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InputBufferSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InputBufferSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefRenderFrameId != other.RefRenderFrameId) return false;
      if (UnconfirmedMask != other.UnconfirmedMask) return false;
      if(!toSendInputFrameDownsyncs_.Equals(other.toSendInputFrameDownsyncs_)) return false;
      if (ShouldForceResync != other.ShouldForceResync) return false;
      if (PeerJoinIndex != other.PeerJoinIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RefRenderFrameId != 0) hash ^= RefRenderFrameId.GetHashCode();
      if (UnconfirmedMask != 0UL) hash ^= UnconfirmedMask.GetHashCode();
      hash ^= toSendInputFrameDownsyncs_.GetHashCode();
      if (ShouldForceResync != false) hash ^= ShouldForceResync.GetHashCode();
      if (PeerJoinIndex != 0) hash ^= PeerJoinIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RefRenderFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RefRenderFrameId);
      }
      if (UnconfirmedMask != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UnconfirmedMask);
      }
      toSendInputFrameDownsyncs_.WriteTo(output, _repeated_toSendInputFrameDownsyncs_codec);
      if (ShouldForceResync != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShouldForceResync);
      }
      if (PeerJoinIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PeerJoinIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RefRenderFrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RefRenderFrameId);
      }
      if (UnconfirmedMask != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(UnconfirmedMask);
      }
      toSendInputFrameDownsyncs_.WriteTo(ref output, _repeated_toSendInputFrameDownsyncs_codec);
      if (ShouldForceResync != false) {
        output.WriteRawTag(32);
        output.WriteBool(ShouldForceResync);
      }
      if (PeerJoinIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PeerJoinIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RefRenderFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RefRenderFrameId);
      }
      if (UnconfirmedMask != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UnconfirmedMask);
      }
      size += toSendInputFrameDownsyncs_.CalculateSize(_repeated_toSendInputFrameDownsyncs_codec);
      if (ShouldForceResync != false) {
        size += 1 + 1;
      }
      if (PeerJoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerJoinIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InputBufferSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.RefRenderFrameId != 0) {
        RefRenderFrameId = other.RefRenderFrameId;
      }
      if (other.UnconfirmedMask != 0UL) {
        UnconfirmedMask = other.UnconfirmedMask;
      }
      toSendInputFrameDownsyncs_.Add(other.toSendInputFrameDownsyncs_);
      if (other.ShouldForceResync != false) {
        ShouldForceResync = other.ShouldForceResync;
      }
      if (other.PeerJoinIndex != 0) {
        PeerJoinIndex = other.PeerJoinIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RefRenderFrameId = input.ReadInt32();
            break;
          }
          case 16: {
            UnconfirmedMask = input.ReadUInt64();
            break;
          }
          case 26: {
            toSendInputFrameDownsyncs_.AddEntriesFrom(input, _repeated_toSendInputFrameDownsyncs_codec);
            break;
          }
          case 32: {
            ShouldForceResync = input.ReadBool();
            break;
          }
          case 40: {
            PeerJoinIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RefRenderFrameId = input.ReadInt32();
            break;
          }
          case 16: {
            UnconfirmedMask = input.ReadUInt64();
            break;
          }
          case 26: {
            toSendInputFrameDownsyncs_.AddEntriesFrom(ref input, _repeated_toSendInputFrameDownsyncs_codec);
            break;
          }
          case 32: {
            ShouldForceResync = input.ReadBool();
            break;
          }
          case 40: {
            PeerJoinIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PatrolCue : pb::IMessage<PatrolCue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PatrolCue> _parser = new pb::MessageParser<PatrolCue>(() => new PatrolCue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PatrolCue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatrolCue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatrolCue(PatrolCue other) : this() {
      flAct_ = other.flAct_;
      frAct_ = other.frAct_;
      flCaptureFrames_ = other.flCaptureFrames_;
      frCaptureFrames_ = other.frCaptureFrames_;
      fdAct_ = other.fdAct_;
      fuAct_ = other.fuAct_;
      fdCaptureFrames_ = other.fdCaptureFrames_;
      fuCaptureFrames_ = other.fuCaptureFrames_;
      collisionTypeMask_ = other.collisionTypeMask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PatrolCue Clone() {
      return new PatrolCue(this);
    }

    /// <summary>Field number for the "flAct" field.</summary>
    public const int FlActFieldNumber = 1;
    private ulong flAct_;
    /// <summary>
    /// "input when colliding from the left side"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FlAct {
      get { return flAct_; }
      set {
        flAct_ = value;
      }
    }

    /// <summary>Field number for the "frAct" field.</summary>
    public const int FrActFieldNumber = 2;
    private ulong frAct_;
    /// <summary>
    /// "input when colliding from the right side"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FrAct {
      get { return frAct_; }
      set {
        frAct_ = value;
      }
    }

    /// <summary>Field number for the "flCaptureFrames" field.</summary>
    public const int FlCaptureFramesFieldNumber = 3;
    private ulong flCaptureFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FlCaptureFrames {
      get { return flCaptureFrames_; }
      set {
        flCaptureFrames_ = value;
      }
    }

    /// <summary>Field number for the "frCaptureFrames" field.</summary>
    public const int FrCaptureFramesFieldNumber = 4;
    private ulong frCaptureFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FrCaptureFrames {
      get { return frCaptureFrames_; }
      set {
        frCaptureFrames_ = value;
      }
    }

    /// <summary>Field number for the "fdAct" field.</summary>
    public const int FdActFieldNumber = 5;
    private ulong fdAct_;
    /// <summary>
    /// "input when colliding from the down side"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FdAct {
      get { return fdAct_; }
      set {
        fdAct_ = value;
      }
    }

    /// <summary>Field number for the "fuAct" field.</summary>
    public const int FuActFieldNumber = 6;
    private ulong fuAct_;
    /// <summary>
    /// "input when colliding from the up side"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FuAct {
      get { return fuAct_; }
      set {
        fuAct_ = value;
      }
    }

    /// <summary>Field number for the "fdCaptureFrames" field.</summary>
    public const int FdCaptureFramesFieldNumber = 7;
    private ulong fdCaptureFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FdCaptureFrames {
      get { return fdCaptureFrames_; }
      set {
        fdCaptureFrames_ = value;
      }
    }

    /// <summary>Field number for the "fuCaptureFrames" field.</summary>
    public const int FuCaptureFramesFieldNumber = 8;
    private ulong fuCaptureFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FuCaptureFrames {
      get { return fuCaptureFrames_; }
      set {
        fuCaptureFrames_ = value;
      }
    }

    /// <summary>Field number for the "collisionTypeMask" field.</summary>
    public const int CollisionTypeMaskFieldNumber = 1029;
    private ulong collisionTypeMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CollisionTypeMask {
      get { return collisionTypeMask_; }
      set {
        collisionTypeMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PatrolCue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PatrolCue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FlAct != other.FlAct) return false;
      if (FrAct != other.FrAct) return false;
      if (FlCaptureFrames != other.FlCaptureFrames) return false;
      if (FrCaptureFrames != other.FrCaptureFrames) return false;
      if (FdAct != other.FdAct) return false;
      if (FuAct != other.FuAct) return false;
      if (FdCaptureFrames != other.FdCaptureFrames) return false;
      if (FuCaptureFrames != other.FuCaptureFrames) return false;
      if (CollisionTypeMask != other.CollisionTypeMask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FlAct != 0UL) hash ^= FlAct.GetHashCode();
      if (FrAct != 0UL) hash ^= FrAct.GetHashCode();
      if (FlCaptureFrames != 0UL) hash ^= FlCaptureFrames.GetHashCode();
      if (FrCaptureFrames != 0UL) hash ^= FrCaptureFrames.GetHashCode();
      if (FdAct != 0UL) hash ^= FdAct.GetHashCode();
      if (FuAct != 0UL) hash ^= FuAct.GetHashCode();
      if (FdCaptureFrames != 0UL) hash ^= FdCaptureFrames.GetHashCode();
      if (FuCaptureFrames != 0UL) hash ^= FuCaptureFrames.GetHashCode();
      if (CollisionTypeMask != 0UL) hash ^= CollisionTypeMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FlAct != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FlAct);
      }
      if (FrAct != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FrAct);
      }
      if (FlCaptureFrames != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(FlCaptureFrames);
      }
      if (FrCaptureFrames != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(FrCaptureFrames);
      }
      if (FdAct != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(FdAct);
      }
      if (FuAct != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(FuAct);
      }
      if (FdCaptureFrames != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(FdCaptureFrames);
      }
      if (FuCaptureFrames != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FuCaptureFrames);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FlAct != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FlAct);
      }
      if (FrAct != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FrAct);
      }
      if (FlCaptureFrames != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(FlCaptureFrames);
      }
      if (FrCaptureFrames != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(FrCaptureFrames);
      }
      if (FdAct != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(FdAct);
      }
      if (FuAct != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(FuAct);
      }
      if (FdCaptureFrames != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(FdCaptureFrames);
      }
      if (FuCaptureFrames != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FuCaptureFrames);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FlAct != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FlAct);
      }
      if (FrAct != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FrAct);
      }
      if (FlCaptureFrames != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FlCaptureFrames);
      }
      if (FrCaptureFrames != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FrCaptureFrames);
      }
      if (FdAct != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FdAct);
      }
      if (FuAct != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FuAct);
      }
      if (FdCaptureFrames != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FdCaptureFrames);
      }
      if (FuCaptureFrames != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FuCaptureFrames);
      }
      if (CollisionTypeMask != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PatrolCue other) {
      if (other == null) {
        return;
      }
      if (other.FlAct != 0UL) {
        FlAct = other.FlAct;
      }
      if (other.FrAct != 0UL) {
        FrAct = other.FrAct;
      }
      if (other.FlCaptureFrames != 0UL) {
        FlCaptureFrames = other.FlCaptureFrames;
      }
      if (other.FrCaptureFrames != 0UL) {
        FrCaptureFrames = other.FrCaptureFrames;
      }
      if (other.FdAct != 0UL) {
        FdAct = other.FdAct;
      }
      if (other.FuAct != 0UL) {
        FuAct = other.FuAct;
      }
      if (other.FdCaptureFrames != 0UL) {
        FdCaptureFrames = other.FdCaptureFrames;
      }
      if (other.FuCaptureFrames != 0UL) {
        FuCaptureFrames = other.FuCaptureFrames;
      }
      if (other.CollisionTypeMask != 0UL) {
        CollisionTypeMask = other.CollisionTypeMask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FlAct = input.ReadUInt64();
            break;
          }
          case 16: {
            FrAct = input.ReadUInt64();
            break;
          }
          case 24: {
            FlCaptureFrames = input.ReadUInt64();
            break;
          }
          case 32: {
            FrCaptureFrames = input.ReadUInt64();
            break;
          }
          case 40: {
            FdAct = input.ReadUInt64();
            break;
          }
          case 48: {
            FuAct = input.ReadUInt64();
            break;
          }
          case 56: {
            FdCaptureFrames = input.ReadUInt64();
            break;
          }
          case 64: {
            FuCaptureFrames = input.ReadUInt64();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FlAct = input.ReadUInt64();
            break;
          }
          case 16: {
            FrAct = input.ReadUInt64();
            break;
          }
          case 24: {
            FlCaptureFrames = input.ReadUInt64();
            break;
          }
          case 32: {
            FrCaptureFrames = input.ReadUInt64();
            break;
          }
          case 40: {
            FdAct = input.ReadUInt64();
            break;
          }
          case 48: {
            FuAct = input.ReadUInt64();
            break;
          }
          case 56: {
            FdCaptureFrames = input.ReadUInt64();
            break;
          }
          case 64: {
            FuCaptureFrames = input.ReadUInt64();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VisionBox : pb::IMessage<VisionBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VisionBox> _parser = new pb::MessageParser<VisionBox>(() => new VisionBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VisionBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VisionBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VisionBox(VisionBox other) : this() {
      bottomLeftX_ = other.bottomLeftX_;
      bottomLeftY_ = other.bottomLeftY_;
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VisionBox Clone() {
      return new VisionBox(this);
    }

    /// <summary>Field number for the "bottomLeftX" field.</summary>
    public const int BottomLeftXFieldNumber = 1;
    private int bottomLeftX_;
    /// <summary>
    /// all values are relative to (CharacterDownsync.dirX=+2, CharacterDownsync.virtualGridX, CharacterDownsync.virtualGridY) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BottomLeftX {
      get { return bottomLeftX_; }
      set {
        bottomLeftX_ = value;
      }
    }

    /// <summary>Field number for the "bottomLeftY" field.</summary>
    public const int BottomLeftYFieldNumber = 2;
    private int bottomLeftY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BottomLeftY {
      get { return bottomLeftY_; }
      set {
        bottomLeftY_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VisionBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VisionBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BottomLeftX != other.BottomLeftX) return false;
      if (BottomLeftY != other.BottomLeftY) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BottomLeftX != 0) hash ^= BottomLeftX.GetHashCode();
      if (BottomLeftY != 0) hash ^= BottomLeftY.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BottomLeftX != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BottomLeftX);
      }
      if (BottomLeftY != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BottomLeftY);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BottomLeftX != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BottomLeftX);
      }
      if (BottomLeftY != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BottomLeftY);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BottomLeftX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BottomLeftX);
      }
      if (BottomLeftY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BottomLeftY);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VisionBox other) {
      if (other == null) {
        return;
      }
      if (other.BottomLeftX != 0) {
        BottomLeftX = other.BottomLeftX;
      }
      if (other.BottomLeftY != 0) {
        BottomLeftY = other.BottomLeftY;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BottomLeftX = input.ReadInt32();
            break;
          }
          case 16: {
            BottomLeftY = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BottomLeftX = input.ReadInt32();
            break;
          }
          case 16: {
            BottomLeftY = input.ReadInt32();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BulletConfig : pb::IMessage<BulletConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulletConfig> _parser = new pb::MessageParser<BulletConfig>(() => new BulletConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BulletConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletConfig(BulletConfig other) : this() {
      startupFrames_ = other.startupFrames_;
      cancellableStFrame_ = other.cancellableStFrame_;
      cancellableEdFrame_ = other.cancellableEdFrame_;
      activeFrames_ = other.activeFrames_;
      hitStunFrames_ = other.hitStunFrames_;
      blockStunFrames_ = other.blockStunFrames_;
      pushbackVelX_ = other.pushbackVelX_;
      pushbackVelY_ = other.pushbackVelY_;
      damage_ = other.damage_;
      selfLockVelX_ = other.selfLockVelX_;
      selfLockVelY_ = other.selfLockVelY_;
      hitboxOffsetX_ = other.hitboxOffsetX_;
      hitboxOffsetY_ = other.hitboxOffsetY_;
      hitboxSizeX_ = other.hitboxSizeX_;
      hitboxSizeY_ = other.hitboxSizeY_;
      blowUp_ = other.blowUp_;
      speciesId_ = other.speciesId_;
      explosionFrames_ = other.explosionFrames_;
      bType_ = other.bType_;
      speed_ = other.speed_;
      cancelTransit_ = other.cancelTransit_.Clone();
      collisionTypeMask_ = other.collisionTypeMask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletConfig Clone() {
      return new BulletConfig(this);
    }

    /// <summary>Field number for the "startupFrames" field.</summary>
    public const int StartupFramesFieldNumber = 1;
    private int startupFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartupFrames {
      get { return startupFrames_; }
      set {
        startupFrames_ = value;
      }
    }

    /// <summary>Field number for the "cancellableStFrame" field.</summary>
    public const int CancellableStFrameFieldNumber = 2;
    private int cancellableStFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CancellableStFrame {
      get { return cancellableStFrame_; }
      set {
        cancellableStFrame_ = value;
      }
    }

    /// <summary>Field number for the "cancellableEdFrame" field.</summary>
    public const int CancellableEdFrameFieldNumber = 3;
    private int cancellableEdFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CancellableEdFrame {
      get { return cancellableEdFrame_; }
      set {
        cancellableEdFrame_ = value;
      }
    }

    /// <summary>Field number for the "activeFrames" field.</summary>
    public const int ActiveFramesFieldNumber = 4;
    private int activeFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActiveFrames {
      get { return activeFrames_; }
      set {
        activeFrames_ = value;
      }
    }

    /// <summary>Field number for the "hitStunFrames" field.</summary>
    public const int HitStunFramesFieldNumber = 5;
    private int hitStunFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitStunFrames {
      get { return hitStunFrames_; }
      set {
        hitStunFrames_ = value;
      }
    }

    /// <summary>Field number for the "blockStunFrames" field.</summary>
    public const int BlockStunFramesFieldNumber = 6;
    private int blockStunFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BlockStunFrames {
      get { return blockStunFrames_; }
      set {
        blockStunFrames_ = value;
      }
    }

    /// <summary>Field number for the "pushbackVelX" field.</summary>
    public const int PushbackVelXFieldNumber = 7;
    private int pushbackVelX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushbackVelX {
      get { return pushbackVelX_; }
      set {
        pushbackVelX_ = value;
      }
    }

    /// <summary>Field number for the "pushbackVelY" field.</summary>
    public const int PushbackVelYFieldNumber = 8;
    private int pushbackVelY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PushbackVelY {
      get { return pushbackVelY_; }
      set {
        pushbackVelY_ = value;
      }
    }

    /// <summary>Field number for the "damage" field.</summary>
    public const int DamageFieldNumber = 9;
    private int damage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Damage {
      get { return damage_; }
      set {
        damage_ = value;
      }
    }

    /// <summary>Field number for the "selfLockVelX" field.</summary>
    public const int SelfLockVelXFieldNumber = 10;
    private int selfLockVelX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SelfLockVelX {
      get { return selfLockVelX_; }
      set {
        selfLockVelX_ = value;
      }
    }

    /// <summary>Field number for the "selfLockVelY" field.</summary>
    public const int SelfLockVelYFieldNumber = 11;
    private int selfLockVelY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SelfLockVelY {
      get { return selfLockVelY_; }
      set {
        selfLockVelY_ = value;
      }
    }

    /// <summary>Field number for the "hitboxOffsetX" field.</summary>
    public const int HitboxOffsetXFieldNumber = 12;
    private int hitboxOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitboxOffsetX {
      get { return hitboxOffsetX_; }
      set {
        hitboxOffsetX_ = value;
      }
    }

    /// <summary>Field number for the "hitboxOffsetY" field.</summary>
    public const int HitboxOffsetYFieldNumber = 13;
    private int hitboxOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitboxOffsetY {
      get { return hitboxOffsetY_; }
      set {
        hitboxOffsetY_ = value;
      }
    }

    /// <summary>Field number for the "hitboxSizeX" field.</summary>
    public const int HitboxSizeXFieldNumber = 14;
    private int hitboxSizeX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitboxSizeX {
      get { return hitboxSizeX_; }
      set {
        hitboxSizeX_ = value;
      }
    }

    /// <summary>Field number for the "hitboxSizeY" field.</summary>
    public const int HitboxSizeYFieldNumber = 15;
    private int hitboxSizeY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HitboxSizeY {
      get { return hitboxSizeY_; }
      set {
        hitboxSizeY_ = value;
      }
    }

    /// <summary>Field number for the "blowUp" field.</summary>
    public const int BlowUpFieldNumber = 16;
    private bool blowUp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BlowUp {
      get { return blowUp_; }
      set {
        blowUp_ = value;
      }
    }

    /// <summary>Field number for the "speciesId" field.</summary>
    public const int SpeciesIdFieldNumber = 17;
    private int speciesId_;
    /// <summary>
    /// For fireball, this SpeciesId specifies both the active animation and the explosion animation, for melee it specifies the explosion animation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SpeciesId {
      get { return speciesId_; }
      set {
        speciesId_ = value;
      }
    }

    /// <summary>Field number for the "explosionFrames" field.</summary>
    public const int ExplosionFramesFieldNumber = 18;
    private int explosionFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExplosionFrames {
      get { return explosionFrames_; }
      set {
        explosionFrames_ = value;
      }
    }

    /// <summary>Field number for the "bType" field.</summary>
    public const int BTypeFieldNumber = 19;
    private global::shared.BulletType bType_ = global::shared.BulletType.Undetermined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.BulletType BType {
      get { return bType_; }
      set {
        bType_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 20;
    private int speed_;
    /// <summary>
    /// For speed varying bullets, this is the initial speed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "cancelTransit" field.</summary>
    public const int CancelTransitFieldNumber = 21;
    private static readonly pbc::MapField<int, int>.Codec _map_cancelTransit_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 170);
    private readonly pbc::MapField<int, int> cancelTransit_ = new pbc::MapField<int, int>();
    /// <summary>
    /// patternId -> skillId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, int> CancelTransit {
      get { return cancelTransit_; }
    }

    /// <summary>Field number for the "collisionTypeMask" field.</summary>
    public const int CollisionTypeMaskFieldNumber = 1029;
    private ulong collisionTypeMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CollisionTypeMask {
      get { return collisionTypeMask_; }
      set {
        collisionTypeMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BulletConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BulletConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartupFrames != other.StartupFrames) return false;
      if (CancellableStFrame != other.CancellableStFrame) return false;
      if (CancellableEdFrame != other.CancellableEdFrame) return false;
      if (ActiveFrames != other.ActiveFrames) return false;
      if (HitStunFrames != other.HitStunFrames) return false;
      if (BlockStunFrames != other.BlockStunFrames) return false;
      if (PushbackVelX != other.PushbackVelX) return false;
      if (PushbackVelY != other.PushbackVelY) return false;
      if (Damage != other.Damage) return false;
      if (SelfLockVelX != other.SelfLockVelX) return false;
      if (SelfLockVelY != other.SelfLockVelY) return false;
      if (HitboxOffsetX != other.HitboxOffsetX) return false;
      if (HitboxOffsetY != other.HitboxOffsetY) return false;
      if (HitboxSizeX != other.HitboxSizeX) return false;
      if (HitboxSizeY != other.HitboxSizeY) return false;
      if (BlowUp != other.BlowUp) return false;
      if (SpeciesId != other.SpeciesId) return false;
      if (ExplosionFrames != other.ExplosionFrames) return false;
      if (BType != other.BType) return false;
      if (Speed != other.Speed) return false;
      if (!CancelTransit.Equals(other.CancelTransit)) return false;
      if (CollisionTypeMask != other.CollisionTypeMask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartupFrames != 0) hash ^= StartupFrames.GetHashCode();
      if (CancellableStFrame != 0) hash ^= CancellableStFrame.GetHashCode();
      if (CancellableEdFrame != 0) hash ^= CancellableEdFrame.GetHashCode();
      if (ActiveFrames != 0) hash ^= ActiveFrames.GetHashCode();
      if (HitStunFrames != 0) hash ^= HitStunFrames.GetHashCode();
      if (BlockStunFrames != 0) hash ^= BlockStunFrames.GetHashCode();
      if (PushbackVelX != 0) hash ^= PushbackVelX.GetHashCode();
      if (PushbackVelY != 0) hash ^= PushbackVelY.GetHashCode();
      if (Damage != 0) hash ^= Damage.GetHashCode();
      if (SelfLockVelX != 0) hash ^= SelfLockVelX.GetHashCode();
      if (SelfLockVelY != 0) hash ^= SelfLockVelY.GetHashCode();
      if (HitboxOffsetX != 0) hash ^= HitboxOffsetX.GetHashCode();
      if (HitboxOffsetY != 0) hash ^= HitboxOffsetY.GetHashCode();
      if (HitboxSizeX != 0) hash ^= HitboxSizeX.GetHashCode();
      if (HitboxSizeY != 0) hash ^= HitboxSizeY.GetHashCode();
      if (BlowUp != false) hash ^= BlowUp.GetHashCode();
      if (SpeciesId != 0) hash ^= SpeciesId.GetHashCode();
      if (ExplosionFrames != 0) hash ^= ExplosionFrames.GetHashCode();
      if (BType != global::shared.BulletType.Undetermined) hash ^= BType.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      hash ^= CancelTransit.GetHashCode();
      if (CollisionTypeMask != 0UL) hash ^= CollisionTypeMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartupFrames != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartupFrames);
      }
      if (CancellableStFrame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CancellableStFrame);
      }
      if (CancellableEdFrame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CancellableEdFrame);
      }
      if (ActiveFrames != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ActiveFrames);
      }
      if (HitStunFrames != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HitStunFrames);
      }
      if (BlockStunFrames != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BlockStunFrames);
      }
      if (PushbackVelX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PushbackVelX);
      }
      if (PushbackVelY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PushbackVelY);
      }
      if (Damage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Damage);
      }
      if (SelfLockVelX != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SelfLockVelX);
      }
      if (SelfLockVelY != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SelfLockVelY);
      }
      if (HitboxOffsetX != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(HitboxOffsetX);
      }
      if (HitboxOffsetY != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(HitboxOffsetY);
      }
      if (HitboxSizeX != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HitboxSizeX);
      }
      if (HitboxSizeY != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(HitboxSizeY);
      }
      if (BlowUp != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(BlowUp);
      }
      if (SpeciesId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(SpeciesId);
      }
      if (ExplosionFrames != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ExplosionFrames);
      }
      if (BType != global::shared.BulletType.Undetermined) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) BType);
      }
      if (Speed != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Speed);
      }
      cancelTransit_.WriteTo(output, _map_cancelTransit_codec);
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartupFrames != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(StartupFrames);
      }
      if (CancellableStFrame != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CancellableStFrame);
      }
      if (CancellableEdFrame != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CancellableEdFrame);
      }
      if (ActiveFrames != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ActiveFrames);
      }
      if (HitStunFrames != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(HitStunFrames);
      }
      if (BlockStunFrames != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(BlockStunFrames);
      }
      if (PushbackVelX != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PushbackVelX);
      }
      if (PushbackVelY != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PushbackVelY);
      }
      if (Damage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Damage);
      }
      if (SelfLockVelX != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SelfLockVelX);
      }
      if (SelfLockVelY != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SelfLockVelY);
      }
      if (HitboxOffsetX != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(HitboxOffsetX);
      }
      if (HitboxOffsetY != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(HitboxOffsetY);
      }
      if (HitboxSizeX != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HitboxSizeX);
      }
      if (HitboxSizeY != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(HitboxSizeY);
      }
      if (BlowUp != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(BlowUp);
      }
      if (SpeciesId != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(SpeciesId);
      }
      if (ExplosionFrames != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ExplosionFrames);
      }
      if (BType != global::shared.BulletType.Undetermined) {
        output.WriteRawTag(152, 1);
        output.WriteEnum((int) BType);
      }
      if (Speed != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(Speed);
      }
      cancelTransit_.WriteTo(ref output, _map_cancelTransit_codec);
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartupFrames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartupFrames);
      }
      if (CancellableStFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CancellableStFrame);
      }
      if (CancellableEdFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CancellableEdFrame);
      }
      if (ActiveFrames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveFrames);
      }
      if (HitStunFrames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitStunFrames);
      }
      if (BlockStunFrames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockStunFrames);
      }
      if (PushbackVelX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushbackVelX);
      }
      if (PushbackVelY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PushbackVelY);
      }
      if (Damage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Damage);
      }
      if (SelfLockVelX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfLockVelX);
      }
      if (SelfLockVelY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfLockVelY);
      }
      if (HitboxOffsetX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitboxOffsetX);
      }
      if (HitboxOffsetY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitboxOffsetY);
      }
      if (HitboxSizeX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitboxSizeX);
      }
      if (HitboxSizeY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitboxSizeY);
      }
      if (BlowUp != false) {
        size += 2 + 1;
      }
      if (SpeciesId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(SpeciesId);
      }
      if (ExplosionFrames != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExplosionFrames);
      }
      if (BType != global::shared.BulletType.Undetermined) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BType);
      }
      if (Speed != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      size += cancelTransit_.CalculateSize(_map_cancelTransit_codec);
      if (CollisionTypeMask != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BulletConfig other) {
      if (other == null) {
        return;
      }
      if (other.StartupFrames != 0) {
        StartupFrames = other.StartupFrames;
      }
      if (other.CancellableStFrame != 0) {
        CancellableStFrame = other.CancellableStFrame;
      }
      if (other.CancellableEdFrame != 0) {
        CancellableEdFrame = other.CancellableEdFrame;
      }
      if (other.ActiveFrames != 0) {
        ActiveFrames = other.ActiveFrames;
      }
      if (other.HitStunFrames != 0) {
        HitStunFrames = other.HitStunFrames;
      }
      if (other.BlockStunFrames != 0) {
        BlockStunFrames = other.BlockStunFrames;
      }
      if (other.PushbackVelX != 0) {
        PushbackVelX = other.PushbackVelX;
      }
      if (other.PushbackVelY != 0) {
        PushbackVelY = other.PushbackVelY;
      }
      if (other.Damage != 0) {
        Damage = other.Damage;
      }
      if (other.SelfLockVelX != 0) {
        SelfLockVelX = other.SelfLockVelX;
      }
      if (other.SelfLockVelY != 0) {
        SelfLockVelY = other.SelfLockVelY;
      }
      if (other.HitboxOffsetX != 0) {
        HitboxOffsetX = other.HitboxOffsetX;
      }
      if (other.HitboxOffsetY != 0) {
        HitboxOffsetY = other.HitboxOffsetY;
      }
      if (other.HitboxSizeX != 0) {
        HitboxSizeX = other.HitboxSizeX;
      }
      if (other.HitboxSizeY != 0) {
        HitboxSizeY = other.HitboxSizeY;
      }
      if (other.BlowUp != false) {
        BlowUp = other.BlowUp;
      }
      if (other.SpeciesId != 0) {
        SpeciesId = other.SpeciesId;
      }
      if (other.ExplosionFrames != 0) {
        ExplosionFrames = other.ExplosionFrames;
      }
      if (other.BType != global::shared.BulletType.Undetermined) {
        BType = other.BType;
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      cancelTransit_.Add(other.cancelTransit_);
      if (other.CollisionTypeMask != 0UL) {
        CollisionTypeMask = other.CollisionTypeMask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartupFrames = input.ReadInt32();
            break;
          }
          case 16: {
            CancellableStFrame = input.ReadInt32();
            break;
          }
          case 24: {
            CancellableEdFrame = input.ReadInt32();
            break;
          }
          case 32: {
            ActiveFrames = input.ReadInt32();
            break;
          }
          case 40: {
            HitStunFrames = input.ReadInt32();
            break;
          }
          case 48: {
            BlockStunFrames = input.ReadInt32();
            break;
          }
          case 56: {
            PushbackVelX = input.ReadInt32();
            break;
          }
          case 64: {
            PushbackVelY = input.ReadInt32();
            break;
          }
          case 72: {
            Damage = input.ReadInt32();
            break;
          }
          case 80: {
            SelfLockVelX = input.ReadInt32();
            break;
          }
          case 88: {
            SelfLockVelY = input.ReadInt32();
            break;
          }
          case 96: {
            HitboxOffsetX = input.ReadInt32();
            break;
          }
          case 104: {
            HitboxOffsetY = input.ReadInt32();
            break;
          }
          case 112: {
            HitboxSizeX = input.ReadInt32();
            break;
          }
          case 120: {
            HitboxSizeY = input.ReadInt32();
            break;
          }
          case 128: {
            BlowUp = input.ReadBool();
            break;
          }
          case 136: {
            SpeciesId = input.ReadInt32();
            break;
          }
          case 144: {
            ExplosionFrames = input.ReadInt32();
            break;
          }
          case 152: {
            BType = (global::shared.BulletType) input.ReadEnum();
            break;
          }
          case 160: {
            Speed = input.ReadInt32();
            break;
          }
          case 170: {
            cancelTransit_.AddEntriesFrom(input, _map_cancelTransit_codec);
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartupFrames = input.ReadInt32();
            break;
          }
          case 16: {
            CancellableStFrame = input.ReadInt32();
            break;
          }
          case 24: {
            CancellableEdFrame = input.ReadInt32();
            break;
          }
          case 32: {
            ActiveFrames = input.ReadInt32();
            break;
          }
          case 40: {
            HitStunFrames = input.ReadInt32();
            break;
          }
          case 48: {
            BlockStunFrames = input.ReadInt32();
            break;
          }
          case 56: {
            PushbackVelX = input.ReadInt32();
            break;
          }
          case 64: {
            PushbackVelY = input.ReadInt32();
            break;
          }
          case 72: {
            Damage = input.ReadInt32();
            break;
          }
          case 80: {
            SelfLockVelX = input.ReadInt32();
            break;
          }
          case 88: {
            SelfLockVelY = input.ReadInt32();
            break;
          }
          case 96: {
            HitboxOffsetX = input.ReadInt32();
            break;
          }
          case 104: {
            HitboxOffsetY = input.ReadInt32();
            break;
          }
          case 112: {
            HitboxSizeX = input.ReadInt32();
            break;
          }
          case 120: {
            HitboxSizeY = input.ReadInt32();
            break;
          }
          case 128: {
            BlowUp = input.ReadBool();
            break;
          }
          case 136: {
            SpeciesId = input.ReadInt32();
            break;
          }
          case 144: {
            ExplosionFrames = input.ReadInt32();
            break;
          }
          case 152: {
            BType = (global::shared.BulletType) input.ReadEnum();
            break;
          }
          case 160: {
            Speed = input.ReadInt32();
            break;
          }
          case 170: {
            cancelTransit_.AddEntriesFrom(ref input, _map_cancelTransit_codec);
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BulletBattleAttr : pb::IMessage<BulletBattleAttr>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulletBattleAttr> _parser = new pb::MessageParser<BulletBattleAttr>(() => new BulletBattleAttr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BulletBattleAttr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletBattleAttr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletBattleAttr(BulletBattleAttr other) : this() {
      bulletLocalId_ = other.bulletLocalId_;
      originatedRenderFrameId_ = other.originatedRenderFrameId_;
      offenderJoinIndex_ = other.offenderJoinIndex_;
      teamId_ = other.teamId_;
      collisionTypeMask_ = other.collisionTypeMask_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulletBattleAttr Clone() {
      return new BulletBattleAttr(this);
    }

    /// <summary>Field number for the "bulletLocalId" field.</summary>
    public const int BulletLocalIdFieldNumber = 1;
    private int bulletLocalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletLocalId {
      get { return bulletLocalId_; }
      set {
        bulletLocalId_ = value;
      }
    }

    /// <summary>Field number for the "originatedRenderFrameId" field.</summary>
    public const int OriginatedRenderFrameIdFieldNumber = 2;
    private int originatedRenderFrameId_;
    /// <summary>
    /// Copied from the first bullet for all subsequent bullets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OriginatedRenderFrameId {
      get { return originatedRenderFrameId_; }
      set {
        originatedRenderFrameId_ = value;
      }
    }

    /// <summary>Field number for the "offenderJoinIndex" field.</summary>
    public const int OffenderJoinIndexFieldNumber = 3;
    private int offenderJoinIndex_;
    /// <summary>
    /// Copied to favor collision handling of the dispatched bullet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OffenderJoinIndex {
      get { return offenderJoinIndex_; }
      set {
        offenderJoinIndex_ = value;
      }
    }

    /// <summary>Field number for the "teamId" field.</summary>
    public const int TeamIdFieldNumber = 4;
    private int teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    /// <summary>Field number for the "collisionTypeMask" field.</summary>
    public const int CollisionTypeMaskFieldNumber = 1029;
    private ulong collisionTypeMask_;
    /// <summary>
    /// Some bullets don't collide with barriers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CollisionTypeMask {
      get { return collisionTypeMask_; }
      set {
        collisionTypeMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BulletBattleAttr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BulletBattleAttr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BulletLocalId != other.BulletLocalId) return false;
      if (OriginatedRenderFrameId != other.OriginatedRenderFrameId) return false;
      if (OffenderJoinIndex != other.OffenderJoinIndex) return false;
      if (TeamId != other.TeamId) return false;
      if (CollisionTypeMask != other.CollisionTypeMask) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BulletLocalId != 0) hash ^= BulletLocalId.GetHashCode();
      if (OriginatedRenderFrameId != 0) hash ^= OriginatedRenderFrameId.GetHashCode();
      if (OffenderJoinIndex != 0) hash ^= OffenderJoinIndex.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (CollisionTypeMask != 0UL) hash ^= CollisionTypeMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BulletLocalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BulletLocalId);
      }
      if (OriginatedRenderFrameId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OriginatedRenderFrameId);
      }
      if (OffenderJoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OffenderJoinIndex);
      }
      if (TeamId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TeamId);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BulletLocalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BulletLocalId);
      }
      if (OriginatedRenderFrameId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OriginatedRenderFrameId);
      }
      if (OffenderJoinIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OffenderJoinIndex);
      }
      if (TeamId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TeamId);
      }
      if (CollisionTypeMask != 0UL) {
        output.WriteRawTag(168, 64);
        output.WriteUInt64(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BulletLocalId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BulletLocalId);
      }
      if (OriginatedRenderFrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OriginatedRenderFrameId);
      }
      if (OffenderJoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OffenderJoinIndex);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamId);
      }
      if (CollisionTypeMask != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(CollisionTypeMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BulletBattleAttr other) {
      if (other == null) {
        return;
      }
      if (other.BulletLocalId != 0) {
        BulletLocalId = other.BulletLocalId;
      }
      if (other.OriginatedRenderFrameId != 0) {
        OriginatedRenderFrameId = other.OriginatedRenderFrameId;
      }
      if (other.OffenderJoinIndex != 0) {
        OffenderJoinIndex = other.OffenderJoinIndex;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      if (other.CollisionTypeMask != 0UL) {
        CollisionTypeMask = other.CollisionTypeMask;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BulletLocalId = input.ReadInt32();
            break;
          }
          case 16: {
            OriginatedRenderFrameId = input.ReadInt32();
            break;
          }
          case 24: {
            OffenderJoinIndex = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt32();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BulletLocalId = input.ReadInt32();
            break;
          }
          case 16: {
            OriginatedRenderFrameId = input.ReadInt32();
            break;
          }
          case 24: {
            OffenderJoinIndex = input.ReadInt32();
            break;
          }
          case 32: {
            TeamId = input.ReadInt32();
            break;
          }
          case 8232: {
            CollisionTypeMask = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Bullet : pb::IMessage<Bullet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Bullet> _parser = new pb::MessageParser<Bullet>(() => new Bullet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Bullet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bullet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bullet(Bullet other) : this() {
      blState_ = other.blState_;
      framesInBlState_ = other.framesInBlState_;
      battleAttr_ = other.battleAttr_ != null ? other.battleAttr_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      virtualGridX_ = other.virtualGridX_;
      virtualGridY_ = other.virtualGridY_;
      dirX_ = other.dirX_;
      dirY_ = other.dirY_;
      velX_ = other.velX_;
      velY_ = other.velY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bullet Clone() {
      return new Bullet(this);
    }

    /// <summary>Field number for the "blState" field.</summary>
    public const int BlStateFieldNumber = 1;
    private global::shared.BulletState blState_ = global::shared.BulletState.StartUp;
    /// <summary>
    /// Jargon reference https://www.thegamer.com/fighting-games-frame-data-explained/
    /// ALL lengths are in world coordinate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.BulletState BlState {
      get { return blState_; }
      set {
        blState_ = value;
      }
    }

    /// <summary>Field number for the "framesInBlState" field.</summary>
    public const int FramesInBlStateFieldNumber = 2;
    private int framesInBlState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FramesInBlState {
      get { return framesInBlState_; }
      set {
        framesInBlState_ = value;
      }
    }

    /// <summary>Field number for the "battleAttr" field.</summary>
    public const int BattleAttrFieldNumber = 3;
    private global::shared.BulletBattleAttr battleAttr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.BulletBattleAttr BattleAttr {
      get { return battleAttr_; }
      set {
        battleAttr_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 4;
    private global::shared.BulletConfig config_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.BulletConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "virtualGridX" field.</summary>
    public const int VirtualGridXFieldNumber = 999;
    private int virtualGridX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VirtualGridX {
      get { return virtualGridX_; }
      set {
        virtualGridX_ = value;
      }
    }

    /// <summary>Field number for the "virtualGridY" field.</summary>
    public const int VirtualGridYFieldNumber = 1000;
    private int virtualGridY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VirtualGridY {
      get { return virtualGridY_; }
      set {
        virtualGridY_ = value;
      }
    }

    /// <summary>Field number for the "dirX" field.</summary>
    public const int DirXFieldNumber = 1001;
    private int dirX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirX {
      get { return dirX_; }
      set {
        dirX_ = value;
      }
    }

    /// <summary>Field number for the "dirY" field.</summary>
    public const int DirYFieldNumber = 1002;
    private int dirY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DirY {
      get { return dirY_; }
      set {
        dirY_ = value;
      }
    }

    /// <summary>Field number for the "velX" field.</summary>
    public const int VelXFieldNumber = 1003;
    private int velX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VelX {
      get { return velX_; }
      set {
        velX_ = value;
      }
    }

    /// <summary>Field number for the "velY" field.</summary>
    public const int VelYFieldNumber = 1004;
    private int velY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int VelY {
      get { return velY_; }
      set {
        velY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Bullet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Bullet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlState != other.BlState) return false;
      if (FramesInBlState != other.FramesInBlState) return false;
      if (!object.Equals(BattleAttr, other.BattleAttr)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (VirtualGridX != other.VirtualGridX) return false;
      if (VirtualGridY != other.VirtualGridY) return false;
      if (DirX != other.DirX) return false;
      if (DirY != other.DirY) return false;
      if (VelX != other.VelX) return false;
      if (VelY != other.VelY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlState != global::shared.BulletState.StartUp) hash ^= BlState.GetHashCode();
      if (FramesInBlState != 0) hash ^= FramesInBlState.GetHashCode();
      if (battleAttr_ != null) hash ^= BattleAttr.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (VirtualGridX != 0) hash ^= VirtualGridX.GetHashCode();
      if (VirtualGridY != 0) hash ^= VirtualGridY.GetHashCode();
      if (DirX != 0) hash ^= DirX.GetHashCode();
      if (DirY != 0) hash ^= DirY.GetHashCode();
      if (VelX != 0) hash ^= VelX.GetHashCode();
      if (VelY != 0) hash ^= VelY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlState != global::shared.BulletState.StartUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BlState);
      }
      if (FramesInBlState != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FramesInBlState);
      }
      if (battleAttr_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BattleAttr);
      }
      if (config_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Config);
      }
      if (VirtualGridX != 0) {
        output.WriteRawTag(184, 62);
        output.WriteInt32(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        output.WriteRawTag(192, 62);
        output.WriteInt32(VirtualGridY);
      }
      if (DirX != 0) {
        output.WriteRawTag(200, 62);
        output.WriteInt32(DirX);
      }
      if (DirY != 0) {
        output.WriteRawTag(208, 62);
        output.WriteInt32(DirY);
      }
      if (VelX != 0) {
        output.WriteRawTag(216, 62);
        output.WriteInt32(VelX);
      }
      if (VelY != 0) {
        output.WriteRawTag(224, 62);
        output.WriteInt32(VelY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlState != global::shared.BulletState.StartUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BlState);
      }
      if (FramesInBlState != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FramesInBlState);
      }
      if (battleAttr_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BattleAttr);
      }
      if (config_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Config);
      }
      if (VirtualGridX != 0) {
        output.WriteRawTag(184, 62);
        output.WriteInt32(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        output.WriteRawTag(192, 62);
        output.WriteInt32(VirtualGridY);
      }
      if (DirX != 0) {
        output.WriteRawTag(200, 62);
        output.WriteInt32(DirX);
      }
      if (DirY != 0) {
        output.WriteRawTag(208, 62);
        output.WriteInt32(DirY);
      }
      if (VelX != 0) {
        output.WriteRawTag(216, 62);
        output.WriteInt32(VelX);
      }
      if (VelY != 0) {
        output.WriteRawTag(224, 62);
        output.WriteInt32(VelY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlState != global::shared.BulletState.StartUp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlState);
      }
      if (FramesInBlState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FramesInBlState);
      }
      if (battleAttr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleAttr);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (VirtualGridX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VirtualGridX);
      }
      if (VirtualGridY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VirtualGridY);
      }
      if (DirX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DirX);
      }
      if (DirY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DirY);
      }
      if (VelX != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VelX);
      }
      if (VelY != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(VelY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Bullet other) {
      if (other == null) {
        return;
      }
      if (other.BlState != global::shared.BulletState.StartUp) {
        BlState = other.BlState;
      }
      if (other.FramesInBlState != 0) {
        FramesInBlState = other.FramesInBlState;
      }
      if (other.battleAttr_ != null) {
        if (battleAttr_ == null) {
          BattleAttr = new global::shared.BulletBattleAttr();
        }
        BattleAttr.MergeFrom(other.BattleAttr);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::shared.BulletConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.VirtualGridX != 0) {
        VirtualGridX = other.VirtualGridX;
      }
      if (other.VirtualGridY != 0) {
        VirtualGridY = other.VirtualGridY;
      }
      if (other.DirX != 0) {
        DirX = other.DirX;
      }
      if (other.DirY != 0) {
        DirY = other.DirY;
      }
      if (other.VelX != 0) {
        VelX = other.VelX;
      }
      if (other.VelY != 0) {
        VelY = other.VelY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlState = (global::shared.BulletState) input.ReadEnum();
            break;
          }
          case 16: {
            FramesInBlState = input.ReadInt32();
            break;
          }
          case 26: {
            if (battleAttr_ == null) {
              BattleAttr = new global::shared.BulletBattleAttr();
            }
            input.ReadMessage(BattleAttr);
            break;
          }
          case 34: {
            if (config_ == null) {
              Config = new global::shared.BulletConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 7992: {
            VirtualGridX = input.ReadInt32();
            break;
          }
          case 8000: {
            VirtualGridY = input.ReadInt32();
            break;
          }
          case 8008: {
            DirX = input.ReadInt32();
            break;
          }
          case 8016: {
            DirY = input.ReadInt32();
            break;
          }
          case 8024: {
            VelX = input.ReadInt32();
            break;
          }
          case 8032: {
            VelY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlState = (global::shared.BulletState) input.ReadEnum();
            break;
          }
          case 16: {
            FramesInBlState = input.ReadInt32();
            break;
          }
          case 26: {
            if (battleAttr_ == null) {
              BattleAttr = new global::shared.BulletBattleAttr();
            }
            input.ReadMessage(BattleAttr);
            break;
          }
          case 34: {
            if (config_ == null) {
              Config = new global::shared.BulletConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 7992: {
            VirtualGridX = input.ReadInt32();
            break;
          }
          case 8000: {
            VirtualGridY = input.ReadInt32();
            break;
          }
          case 8008: {
            DirX = input.ReadInt32();
            break;
          }
          case 8016: {
            DirY = input.ReadInt32();
            break;
          }
          case 8024: {
            VelX = input.ReadInt32();
            break;
          }
          case 8032: {
            VelY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PeerUdpAddr : pb::IMessage<PeerUdpAddr>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PeerUdpAddr> _parser = new pb::MessageParser<PeerUdpAddr>(() => new PeerUdpAddr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PeerUdpAddr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeerUdpAddr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeerUdpAddr(PeerUdpAddr other) : this() {
      ip_ = other.ip_;
      port_ = other.port_;
      authKey_ = other.authKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PeerUdpAddr Clone() {
      return new PeerUdpAddr(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "authKey" field.</summary>
    public const int AuthKeyFieldNumber = 3;
    private int authKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthKey {
      get { return authKey_; }
      set {
        authKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PeerUdpAddr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PeerUdpAddr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      if (AuthKey != other.AuthKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (AuthKey != 0) hash ^= AuthKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (AuthKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (AuthKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AuthKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (AuthKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PeerUdpAddr other) {
      if (other == null) {
        return;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.AuthKey != 0) {
        AuthKey = other.AuthKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 24: {
            AuthKey = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
          case 24: {
            AuthKey = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleColliderInfo : pb::IMessage<BattleColliderInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleColliderInfo> _parser = new pb::MessageParser<BattleColliderInfo>(() => new BattleColliderInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattleColliderInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleColliderInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleColliderInfo(BattleColliderInfo other) : this() {
      stageName_ = other.stageName_;
      boundRoomId_ = other.boundRoomId_;
      battleDurationFrames_ = other.battleDurationFrames_;
      inputFrameUpsyncDelayTolerance_ = other.inputFrameUpsyncDelayTolerance_;
      maxChasingRenderFramesPerUpdate_ = other.maxChasingRenderFramesPerUpdate_;
      rollbackEstimatedDtMillis_ = other.rollbackEstimatedDtMillis_;
      rollbackEstimatedDtNanos_ = other.rollbackEstimatedDtNanos_;
      renderBufferSize_ = other.renderBufferSize_;
      collisionMinStep_ = other.collisionMinStep_;
      boundRoomCapacity_ = other.boundRoomCapacity_;
      preallocNpcCapacity_ = other.preallocNpcCapacity_;
      preallocBulletCapacity_ = other.preallocBulletCapacity_;
      battleUdpTunnel_ = other.battleUdpTunnel_ != null ? other.battleUdpTunnel_.Clone() : null;
      frameLogEnabled_ = other.frameLogEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattleColliderInfo Clone() {
      return new BattleColliderInfo(this);
    }

    /// <summary>Field number for the "stageName" field.</summary>
    public const int StageNameFieldNumber = 1;
    private string stageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StageName {
      get { return stageName_; }
      set {
        stageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boundRoomId" field.</summary>
    public const int BoundRoomIdFieldNumber = 2;
    private int boundRoomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BoundRoomId {
      get { return boundRoomId_; }
      set {
        boundRoomId_ = value;
      }
    }

    /// <summary>Field number for the "battleDurationFrames" field.</summary>
    public const int BattleDurationFramesFieldNumber = 3;
    private long battleDurationFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BattleDurationFrames {
      get { return battleDurationFrames_; }
      set {
        battleDurationFrames_ = value;
      }
    }

    /// <summary>Field number for the "inputFrameUpsyncDelayTolerance" field.</summary>
    public const int InputFrameUpsyncDelayToleranceFieldNumber = 4;
    private int inputFrameUpsyncDelayTolerance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InputFrameUpsyncDelayTolerance {
      get { return inputFrameUpsyncDelayTolerance_; }
      set {
        inputFrameUpsyncDelayTolerance_ = value;
      }
    }

    /// <summary>Field number for the "maxChasingRenderFramesPerUpdate" field.</summary>
    public const int MaxChasingRenderFramesPerUpdateFieldNumber = 5;
    private int maxChasingRenderFramesPerUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxChasingRenderFramesPerUpdate {
      get { return maxChasingRenderFramesPerUpdate_; }
      set {
        maxChasingRenderFramesPerUpdate_ = value;
      }
    }

    /// <summary>Field number for the "rollbackEstimatedDtMillis" field.</summary>
    public const int RollbackEstimatedDtMillisFieldNumber = 6;
    private double rollbackEstimatedDtMillis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double RollbackEstimatedDtMillis {
      get { return rollbackEstimatedDtMillis_; }
      set {
        rollbackEstimatedDtMillis_ = value;
      }
    }

    /// <summary>Field number for the "rollbackEstimatedDtNanos" field.</summary>
    public const int RollbackEstimatedDtNanosFieldNumber = 7;
    private long rollbackEstimatedDtNanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RollbackEstimatedDtNanos {
      get { return rollbackEstimatedDtNanos_; }
      set {
        rollbackEstimatedDtNanos_ = value;
      }
    }

    /// <summary>Field number for the "renderBufferSize" field.</summary>
    public const int RenderBufferSizeFieldNumber = 8;
    private int renderBufferSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RenderBufferSize {
      get { return renderBufferSize_; }
      set {
        renderBufferSize_ = value;
      }
    }

    /// <summary>Field number for the "collisionMinStep" field.</summary>
    public const int CollisionMinStepFieldNumber = 9;
    private int collisionMinStep_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CollisionMinStep {
      get { return collisionMinStep_; }
      set {
        collisionMinStep_ = value;
      }
    }

    /// <summary>Field number for the "boundRoomCapacity" field.</summary>
    public const int BoundRoomCapacityFieldNumber = 10;
    private int boundRoomCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BoundRoomCapacity {
      get { return boundRoomCapacity_; }
      set {
        boundRoomCapacity_ = value;
      }
    }

    /// <summary>Field number for the "preallocNpcCapacity" field.</summary>
    public const int PreallocNpcCapacityFieldNumber = 11;
    private int preallocNpcCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreallocNpcCapacity {
      get { return preallocNpcCapacity_; }
      set {
        preallocNpcCapacity_ = value;
      }
    }

    /// <summary>Field number for the "preallocBulletCapacity" field.</summary>
    public const int PreallocBulletCapacityFieldNumber = 12;
    private int preallocBulletCapacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PreallocBulletCapacity {
      get { return preallocBulletCapacity_; }
      set {
        preallocBulletCapacity_ = value;
      }
    }

    /// <summary>Field number for the "battleUdpTunnel" field.</summary>
    public const int BattleUdpTunnelFieldNumber = 1024;
    private global::shared.PeerUdpAddr battleUdpTunnel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.PeerUdpAddr BattleUdpTunnel {
      get { return battleUdpTunnel_; }
      set {
        battleUdpTunnel_ = value;
      }
    }

    /// <summary>Field number for the "frameLogEnabled" field.</summary>
    public const int FrameLogEnabledFieldNumber = 1025;
    private bool frameLogEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FrameLogEnabled {
      get { return frameLogEnabled_; }
      set {
        frameLogEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattleColliderInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattleColliderInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageName != other.StageName) return false;
      if (BoundRoomId != other.BoundRoomId) return false;
      if (BattleDurationFrames != other.BattleDurationFrames) return false;
      if (InputFrameUpsyncDelayTolerance != other.InputFrameUpsyncDelayTolerance) return false;
      if (MaxChasingRenderFramesPerUpdate != other.MaxChasingRenderFramesPerUpdate) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RollbackEstimatedDtMillis, other.RollbackEstimatedDtMillis)) return false;
      if (RollbackEstimatedDtNanos != other.RollbackEstimatedDtNanos) return false;
      if (RenderBufferSize != other.RenderBufferSize) return false;
      if (CollisionMinStep != other.CollisionMinStep) return false;
      if (BoundRoomCapacity != other.BoundRoomCapacity) return false;
      if (PreallocNpcCapacity != other.PreallocNpcCapacity) return false;
      if (PreallocBulletCapacity != other.PreallocBulletCapacity) return false;
      if (!object.Equals(BattleUdpTunnel, other.BattleUdpTunnel)) return false;
      if (FrameLogEnabled != other.FrameLogEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StageName.Length != 0) hash ^= StageName.GetHashCode();
      if (BoundRoomId != 0) hash ^= BoundRoomId.GetHashCode();
      if (BattleDurationFrames != 0L) hash ^= BattleDurationFrames.GetHashCode();
      if (InputFrameUpsyncDelayTolerance != 0) hash ^= InputFrameUpsyncDelayTolerance.GetHashCode();
      if (MaxChasingRenderFramesPerUpdate != 0) hash ^= MaxChasingRenderFramesPerUpdate.GetHashCode();
      if (RollbackEstimatedDtMillis != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RollbackEstimatedDtMillis);
      if (RollbackEstimatedDtNanos != 0L) hash ^= RollbackEstimatedDtNanos.GetHashCode();
      if (RenderBufferSize != 0) hash ^= RenderBufferSize.GetHashCode();
      if (CollisionMinStep != 0) hash ^= CollisionMinStep.GetHashCode();
      if (BoundRoomCapacity != 0) hash ^= BoundRoomCapacity.GetHashCode();
      if (PreallocNpcCapacity != 0) hash ^= PreallocNpcCapacity.GetHashCode();
      if (PreallocBulletCapacity != 0) hash ^= PreallocBulletCapacity.GetHashCode();
      if (battleUdpTunnel_ != null) hash ^= BattleUdpTunnel.GetHashCode();
      if (FrameLogEnabled != false) hash ^= FrameLogEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StageName);
      }
      if (BoundRoomId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoundRoomId);
      }
      if (BattleDurationFrames != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BattleDurationFrames);
      }
      if (InputFrameUpsyncDelayTolerance != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InputFrameUpsyncDelayTolerance);
      }
      if (MaxChasingRenderFramesPerUpdate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxChasingRenderFramesPerUpdate);
      }
      if (RollbackEstimatedDtMillis != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RollbackEstimatedDtMillis);
      }
      if (RollbackEstimatedDtNanos != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RollbackEstimatedDtNanos);
      }
      if (RenderBufferSize != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RenderBufferSize);
      }
      if (CollisionMinStep != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CollisionMinStep);
      }
      if (BoundRoomCapacity != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BoundRoomCapacity);
      }
      if (PreallocNpcCapacity != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PreallocNpcCapacity);
      }
      if (PreallocBulletCapacity != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PreallocBulletCapacity);
      }
      if (battleUdpTunnel_ != null) {
        output.WriteRawTag(130, 64);
        output.WriteMessage(BattleUdpTunnel);
      }
      if (FrameLogEnabled != false) {
        output.WriteRawTag(136, 64);
        output.WriteBool(FrameLogEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StageName);
      }
      if (BoundRoomId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoundRoomId);
      }
      if (BattleDurationFrames != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BattleDurationFrames);
      }
      if (InputFrameUpsyncDelayTolerance != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InputFrameUpsyncDelayTolerance);
      }
      if (MaxChasingRenderFramesPerUpdate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxChasingRenderFramesPerUpdate);
      }
      if (RollbackEstimatedDtMillis != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(RollbackEstimatedDtMillis);
      }
      if (RollbackEstimatedDtNanos != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(RollbackEstimatedDtNanos);
      }
      if (RenderBufferSize != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RenderBufferSize);
      }
      if (CollisionMinStep != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CollisionMinStep);
      }
      if (BoundRoomCapacity != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BoundRoomCapacity);
      }
      if (PreallocNpcCapacity != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PreallocNpcCapacity);
      }
      if (PreallocBulletCapacity != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PreallocBulletCapacity);
      }
      if (battleUdpTunnel_ != null) {
        output.WriteRawTag(130, 64);
        output.WriteMessage(BattleUdpTunnel);
      }
      if (FrameLogEnabled != false) {
        output.WriteRawTag(136, 64);
        output.WriteBool(FrameLogEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StageName);
      }
      if (BoundRoomId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoundRoomId);
      }
      if (BattleDurationFrames != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BattleDurationFrames);
      }
      if (InputFrameUpsyncDelayTolerance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InputFrameUpsyncDelayTolerance);
      }
      if (MaxChasingRenderFramesPerUpdate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxChasingRenderFramesPerUpdate);
      }
      if (RollbackEstimatedDtMillis != 0D) {
        size += 1 + 8;
      }
      if (RollbackEstimatedDtNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RollbackEstimatedDtNanos);
      }
      if (RenderBufferSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RenderBufferSize);
      }
      if (CollisionMinStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CollisionMinStep);
      }
      if (BoundRoomCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoundRoomCapacity);
      }
      if (PreallocNpcCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreallocNpcCapacity);
      }
      if (PreallocBulletCapacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreallocBulletCapacity);
      }
      if (battleUdpTunnel_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BattleUdpTunnel);
      }
      if (FrameLogEnabled != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattleColliderInfo other) {
      if (other == null) {
        return;
      }
      if (other.StageName.Length != 0) {
        StageName = other.StageName;
      }
      if (other.BoundRoomId != 0) {
        BoundRoomId = other.BoundRoomId;
      }
      if (other.BattleDurationFrames != 0L) {
        BattleDurationFrames = other.BattleDurationFrames;
      }
      if (other.InputFrameUpsyncDelayTolerance != 0) {
        InputFrameUpsyncDelayTolerance = other.InputFrameUpsyncDelayTolerance;
      }
      if (other.MaxChasingRenderFramesPerUpdate != 0) {
        MaxChasingRenderFramesPerUpdate = other.MaxChasingRenderFramesPerUpdate;
      }
      if (other.RollbackEstimatedDtMillis != 0D) {
        RollbackEstimatedDtMillis = other.RollbackEstimatedDtMillis;
      }
      if (other.RollbackEstimatedDtNanos != 0L) {
        RollbackEstimatedDtNanos = other.RollbackEstimatedDtNanos;
      }
      if (other.RenderBufferSize != 0) {
        RenderBufferSize = other.RenderBufferSize;
      }
      if (other.CollisionMinStep != 0) {
        CollisionMinStep = other.CollisionMinStep;
      }
      if (other.BoundRoomCapacity != 0) {
        BoundRoomCapacity = other.BoundRoomCapacity;
      }
      if (other.PreallocNpcCapacity != 0) {
        PreallocNpcCapacity = other.PreallocNpcCapacity;
      }
      if (other.PreallocBulletCapacity != 0) {
        PreallocBulletCapacity = other.PreallocBulletCapacity;
      }
      if (other.battleUdpTunnel_ != null) {
        if (battleUdpTunnel_ == null) {
          BattleUdpTunnel = new global::shared.PeerUdpAddr();
        }
        BattleUdpTunnel.MergeFrom(other.BattleUdpTunnel);
      }
      if (other.FrameLogEnabled != false) {
        FrameLogEnabled = other.FrameLogEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StageName = input.ReadString();
            break;
          }
          case 16: {
            BoundRoomId = input.ReadInt32();
            break;
          }
          case 24: {
            BattleDurationFrames = input.ReadInt64();
            break;
          }
          case 32: {
            InputFrameUpsyncDelayTolerance = input.ReadInt32();
            break;
          }
          case 40: {
            MaxChasingRenderFramesPerUpdate = input.ReadInt32();
            break;
          }
          case 49: {
            RollbackEstimatedDtMillis = input.ReadDouble();
            break;
          }
          case 56: {
            RollbackEstimatedDtNanos = input.ReadInt64();
            break;
          }
          case 64: {
            RenderBufferSize = input.ReadInt32();
            break;
          }
          case 72: {
            CollisionMinStep = input.ReadInt32();
            break;
          }
          case 80: {
            BoundRoomCapacity = input.ReadInt32();
            break;
          }
          case 88: {
            PreallocNpcCapacity = input.ReadInt32();
            break;
          }
          case 96: {
            PreallocBulletCapacity = input.ReadInt32();
            break;
          }
          case 8194: {
            if (battleUdpTunnel_ == null) {
              BattleUdpTunnel = new global::shared.PeerUdpAddr();
            }
            input.ReadMessage(BattleUdpTunnel);
            break;
          }
          case 8200: {
            FrameLogEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StageName = input.ReadString();
            break;
          }
          case 16: {
            BoundRoomId = input.ReadInt32();
            break;
          }
          case 24: {
            BattleDurationFrames = input.ReadInt64();
            break;
          }
          case 32: {
            InputFrameUpsyncDelayTolerance = input.ReadInt32();
            break;
          }
          case 40: {
            MaxChasingRenderFramesPerUpdate = input.ReadInt32();
            break;
          }
          case 49: {
            RollbackEstimatedDtMillis = input.ReadDouble();
            break;
          }
          case 56: {
            RollbackEstimatedDtNanos = input.ReadInt64();
            break;
          }
          case 64: {
            RenderBufferSize = input.ReadInt32();
            break;
          }
          case 72: {
            CollisionMinStep = input.ReadInt32();
            break;
          }
          case 80: {
            BoundRoomCapacity = input.ReadInt32();
            break;
          }
          case 88: {
            PreallocNpcCapacity = input.ReadInt32();
            break;
          }
          case 96: {
            PreallocBulletCapacity = input.ReadInt32();
            break;
          }
          case 8194: {
            if (battleUdpTunnel_ == null) {
              BattleUdpTunnel = new global::shared.PeerUdpAddr();
            }
            input.ReadMessage(BattleUdpTunnel);
            break;
          }
          case 8200: {
            FrameLogEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomDownsyncFrame : pb::IMessage<RoomDownsyncFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomDownsyncFrame> _parser = new pb::MessageParser<RoomDownsyncFrame>(() => new RoomDownsyncFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomDownsyncFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDownsyncFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDownsyncFrame(RoomDownsyncFrame other) : this() {
      id_ = other.id_;
      playersArr_ = other.playersArr_.Clone();
      countdownNanos_ = other.countdownNanos_;
      bullets_ = other.bullets_.Clone();
      npcsArr_ = other.npcsArr_.Clone();
      trapsArr_ = other.trapsArr_.Clone();
      backendUnconfirmedMask_ = other.backendUnconfirmedMask_;
      shouldForceResync_ = other.shouldForceResync_;
      speciesIdList_ = other.speciesIdList_.Clone();
      bulletLocalIdCounter_ = other.bulletLocalIdCounter_;
      peerUdpAddrList_ = other.peerUdpAddrList_.Clone();
      participantChangeId_ = other.participantChangeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomDownsyncFrame Clone() {
      return new RoomDownsyncFrame(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "playersArr" field.</summary>
    public const int PlayersArrFieldNumber = 2;
    private static readonly pb::FieldCodec<global::shared.CharacterDownsync> _repeated_playersArr_codec
        = pb::FieldCodec.ForMessage(18, global::shared.CharacterDownsync.Parser);
    private readonly pbc::RepeatedField<global::shared.CharacterDownsync> playersArr_ = new pbc::RepeatedField<global::shared.CharacterDownsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.CharacterDownsync> PlayersArr {
      get { return playersArr_; }
    }

    /// <summary>Field number for the "countdownNanos" field.</summary>
    public const int CountdownNanosFieldNumber = 3;
    private long countdownNanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CountdownNanos {
      get { return countdownNanos_; }
      set {
        countdownNanos_ = value;
      }
    }

    /// <summary>Field number for the "bullets" field.</summary>
    public const int BulletsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::shared.Bullet> _repeated_bullets_codec
        = pb::FieldCodec.ForMessage(34, global::shared.Bullet.Parser);
    private readonly pbc::RepeatedField<global::shared.Bullet> bullets_ = new pbc::RepeatedField<global::shared.Bullet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.Bullet> Bullets {
      get { return bullets_; }
    }

    /// <summary>Field number for the "npcsArr" field.</summary>
    public const int NpcsArrFieldNumber = 5;
    private static readonly pb::FieldCodec<global::shared.CharacterDownsync> _repeated_npcsArr_codec
        = pb::FieldCodec.ForMessage(42, global::shared.CharacterDownsync.Parser);
    private readonly pbc::RepeatedField<global::shared.CharacterDownsync> npcsArr_ = new pbc::RepeatedField<global::shared.CharacterDownsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.CharacterDownsync> NpcsArr {
      get { return npcsArr_; }
    }

    /// <summary>Field number for the "trapsArr" field.</summary>
    public const int TrapsArrFieldNumber = 6;
    private static readonly pb::FieldCodec<global::shared.CharacterDownsync> _repeated_trapsArr_codec
        = pb::FieldCodec.ForMessage(50, global::shared.CharacterDownsync.Parser);
    private readonly pbc::RepeatedField<global::shared.CharacterDownsync> trapsArr_ = new pbc::RepeatedField<global::shared.CharacterDownsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.CharacterDownsync> TrapsArr {
      get { return trapsArr_; }
    }

    /// <summary>Field number for the "backendUnconfirmedMask" field.</summary>
    public const int BackendUnconfirmedMaskFieldNumber = 1024;
    private ulong backendUnconfirmedMask_;
    /// <summary>
    /// Indexed by "joinIndex", same compression concern as stated in InputFrameDownsync
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BackendUnconfirmedMask {
      get { return backendUnconfirmedMask_; }
      set {
        backendUnconfirmedMask_ = value;
      }
    }

    /// <summary>Field number for the "shouldForceResync" field.</summary>
    public const int ShouldForceResyncFieldNumber = 1025;
    private bool shouldForceResync_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShouldForceResync {
      get { return shouldForceResync_; }
      set {
        shouldForceResync_ = value;
      }
    }

    /// <summary>Field number for the "speciesIdList" field.</summary>
    public const int SpeciesIdListFieldNumber = 1026;
    private static readonly pb::FieldCodec<int> _repeated_speciesIdList_codec
        = pb::FieldCodec.ForInt32(8210);
    private readonly pbc::RepeatedField<int> speciesIdList_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> SpeciesIdList {
      get { return speciesIdList_; }
    }

    /// <summary>Field number for the "bulletLocalIdCounter" field.</summary>
    public const int BulletLocalIdCounterFieldNumber = 1027;
    private int bulletLocalIdCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BulletLocalIdCounter {
      get { return bulletLocalIdCounter_; }
      set {
        bulletLocalIdCounter_ = value;
      }
    }

    /// <summary>Field number for the "peerUdpAddrList" field.</summary>
    public const int PeerUdpAddrListFieldNumber = 1028;
    private static readonly pb::FieldCodec<global::shared.PeerUdpAddr> _repeated_peerUdpAddrList_codec
        = pb::FieldCodec.ForMessage(8226, global::shared.PeerUdpAddr.Parser);
    private readonly pbc::RepeatedField<global::shared.PeerUdpAddr> peerUdpAddrList_ = new pbc::RepeatedField<global::shared.PeerUdpAddr>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.PeerUdpAddr> PeerUdpAddrList {
      get { return peerUdpAddrList_; }
    }

    /// <summary>Field number for the "participantChangeId" field.</summary>
    public const int ParticipantChangeIdFieldNumber = 1029;
    private int participantChangeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ParticipantChangeId {
      get { return participantChangeId_; }
      set {
        participantChangeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomDownsyncFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomDownsyncFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!playersArr_.Equals(other.playersArr_)) return false;
      if (CountdownNanos != other.CountdownNanos) return false;
      if(!bullets_.Equals(other.bullets_)) return false;
      if(!npcsArr_.Equals(other.npcsArr_)) return false;
      if(!trapsArr_.Equals(other.trapsArr_)) return false;
      if (BackendUnconfirmedMask != other.BackendUnconfirmedMask) return false;
      if (ShouldForceResync != other.ShouldForceResync) return false;
      if(!speciesIdList_.Equals(other.speciesIdList_)) return false;
      if (BulletLocalIdCounter != other.BulletLocalIdCounter) return false;
      if(!peerUdpAddrList_.Equals(other.peerUdpAddrList_)) return false;
      if (ParticipantChangeId != other.ParticipantChangeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= playersArr_.GetHashCode();
      if (CountdownNanos != 0L) hash ^= CountdownNanos.GetHashCode();
      hash ^= bullets_.GetHashCode();
      hash ^= npcsArr_.GetHashCode();
      hash ^= trapsArr_.GetHashCode();
      if (BackendUnconfirmedMask != 0UL) hash ^= BackendUnconfirmedMask.GetHashCode();
      if (ShouldForceResync != false) hash ^= ShouldForceResync.GetHashCode();
      hash ^= speciesIdList_.GetHashCode();
      if (BulletLocalIdCounter != 0) hash ^= BulletLocalIdCounter.GetHashCode();
      hash ^= peerUdpAddrList_.GetHashCode();
      if (ParticipantChangeId != 0) hash ^= ParticipantChangeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      playersArr_.WriteTo(output, _repeated_playersArr_codec);
      if (CountdownNanos != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CountdownNanos);
      }
      bullets_.WriteTo(output, _repeated_bullets_codec);
      npcsArr_.WriteTo(output, _repeated_npcsArr_codec);
      trapsArr_.WriteTo(output, _repeated_trapsArr_codec);
      if (BackendUnconfirmedMask != 0UL) {
        output.WriteRawTag(128, 64);
        output.WriteUInt64(BackendUnconfirmedMask);
      }
      if (ShouldForceResync != false) {
        output.WriteRawTag(136, 64);
        output.WriteBool(ShouldForceResync);
      }
      speciesIdList_.WriteTo(output, _repeated_speciesIdList_codec);
      if (BulletLocalIdCounter != 0) {
        output.WriteRawTag(152, 64);
        output.WriteInt32(BulletLocalIdCounter);
      }
      peerUdpAddrList_.WriteTo(output, _repeated_peerUdpAddrList_codec);
      if (ParticipantChangeId != 0) {
        output.WriteRawTag(168, 64);
        output.WriteInt32(ParticipantChangeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      playersArr_.WriteTo(ref output, _repeated_playersArr_codec);
      if (CountdownNanos != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CountdownNanos);
      }
      bullets_.WriteTo(ref output, _repeated_bullets_codec);
      npcsArr_.WriteTo(ref output, _repeated_npcsArr_codec);
      trapsArr_.WriteTo(ref output, _repeated_trapsArr_codec);
      if (BackendUnconfirmedMask != 0UL) {
        output.WriteRawTag(128, 64);
        output.WriteUInt64(BackendUnconfirmedMask);
      }
      if (ShouldForceResync != false) {
        output.WriteRawTag(136, 64);
        output.WriteBool(ShouldForceResync);
      }
      speciesIdList_.WriteTo(ref output, _repeated_speciesIdList_codec);
      if (BulletLocalIdCounter != 0) {
        output.WriteRawTag(152, 64);
        output.WriteInt32(BulletLocalIdCounter);
      }
      peerUdpAddrList_.WriteTo(ref output, _repeated_peerUdpAddrList_codec);
      if (ParticipantChangeId != 0) {
        output.WriteRawTag(168, 64);
        output.WriteInt32(ParticipantChangeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += playersArr_.CalculateSize(_repeated_playersArr_codec);
      if (CountdownNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CountdownNanos);
      }
      size += bullets_.CalculateSize(_repeated_bullets_codec);
      size += npcsArr_.CalculateSize(_repeated_npcsArr_codec);
      size += trapsArr_.CalculateSize(_repeated_trapsArr_codec);
      if (BackendUnconfirmedMask != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(BackendUnconfirmedMask);
      }
      if (ShouldForceResync != false) {
        size += 2 + 1;
      }
      size += speciesIdList_.CalculateSize(_repeated_speciesIdList_codec);
      if (BulletLocalIdCounter != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BulletLocalIdCounter);
      }
      size += peerUdpAddrList_.CalculateSize(_repeated_peerUdpAddrList_codec);
      if (ParticipantChangeId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ParticipantChangeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomDownsyncFrame other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      playersArr_.Add(other.playersArr_);
      if (other.CountdownNanos != 0L) {
        CountdownNanos = other.CountdownNanos;
      }
      bullets_.Add(other.bullets_);
      npcsArr_.Add(other.npcsArr_);
      trapsArr_.Add(other.trapsArr_);
      if (other.BackendUnconfirmedMask != 0UL) {
        BackendUnconfirmedMask = other.BackendUnconfirmedMask;
      }
      if (other.ShouldForceResync != false) {
        ShouldForceResync = other.ShouldForceResync;
      }
      speciesIdList_.Add(other.speciesIdList_);
      if (other.BulletLocalIdCounter != 0) {
        BulletLocalIdCounter = other.BulletLocalIdCounter;
      }
      peerUdpAddrList_.Add(other.peerUdpAddrList_);
      if (other.ParticipantChangeId != 0) {
        ParticipantChangeId = other.ParticipantChangeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            playersArr_.AddEntriesFrom(input, _repeated_playersArr_codec);
            break;
          }
          case 24: {
            CountdownNanos = input.ReadInt64();
            break;
          }
          case 34: {
            bullets_.AddEntriesFrom(input, _repeated_bullets_codec);
            break;
          }
          case 42: {
            npcsArr_.AddEntriesFrom(input, _repeated_npcsArr_codec);
            break;
          }
          case 50: {
            trapsArr_.AddEntriesFrom(input, _repeated_trapsArr_codec);
            break;
          }
          case 8192: {
            BackendUnconfirmedMask = input.ReadUInt64();
            break;
          }
          case 8200: {
            ShouldForceResync = input.ReadBool();
            break;
          }
          case 8210:
          case 8208: {
            speciesIdList_.AddEntriesFrom(input, _repeated_speciesIdList_codec);
            break;
          }
          case 8216: {
            BulletLocalIdCounter = input.ReadInt32();
            break;
          }
          case 8226: {
            peerUdpAddrList_.AddEntriesFrom(input, _repeated_peerUdpAddrList_codec);
            break;
          }
          case 8232: {
            ParticipantChangeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            playersArr_.AddEntriesFrom(ref input, _repeated_playersArr_codec);
            break;
          }
          case 24: {
            CountdownNanos = input.ReadInt64();
            break;
          }
          case 34: {
            bullets_.AddEntriesFrom(ref input, _repeated_bullets_codec);
            break;
          }
          case 42: {
            npcsArr_.AddEntriesFrom(ref input, _repeated_npcsArr_codec);
            break;
          }
          case 50: {
            trapsArr_.AddEntriesFrom(ref input, _repeated_trapsArr_codec);
            break;
          }
          case 8192: {
            BackendUnconfirmedMask = input.ReadUInt64();
            break;
          }
          case 8200: {
            ShouldForceResync = input.ReadBool();
            break;
          }
          case 8210:
          case 8208: {
            speciesIdList_.AddEntriesFrom(ref input, _repeated_speciesIdList_codec);
            break;
          }
          case 8216: {
            BulletLocalIdCounter = input.ReadInt32();
            break;
          }
          case 8226: {
            peerUdpAddrList_.AddEntriesFrom(ref input, _repeated_peerUdpAddrList_codec);
            break;
          }
          case 8232: {
            ParticipantChangeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WsResp : pb::IMessage<WsResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WsResp> _parser = new pb::MessageParser<WsResp>(() => new WsResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WsResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsResp(WsResp other) : this() {
      ret_ = other.ret_;
      act_ = other.act_;
      rdf_ = other.rdf_ != null ? other.rdf_.Clone() : null;
      inputFrameDownsyncBatch_ = other.inputFrameDownsyncBatch_.Clone();
      bciFrame_ = other.bciFrame_ != null ? other.bciFrame_.Clone() : null;
      peerJoinIndex_ = other.peerJoinIndex_;
      errMsg_ = other.errMsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WsResp Clone() {
      return new WsResp(this);
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 1;
    private int ret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ret {
      get { return ret_; }
      set {
        ret_ = value;
      }
    }

    /// <summary>Field number for the "act" field.</summary>
    public const int ActFieldNumber = 2;
    private int act_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Act {
      get { return act_; }
      set {
        act_ = value;
      }
    }

    /// <summary>Field number for the "rdf" field.</summary>
    public const int RdfFieldNumber = 3;
    private global::shared.RoomDownsyncFrame rdf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.RoomDownsyncFrame Rdf {
      get { return rdf_; }
      set {
        rdf_ = value;
      }
    }

    /// <summary>Field number for the "inputFrameDownsyncBatch" field.</summary>
    public const int InputFrameDownsyncBatchFieldNumber = 4;
    private static readonly pb::FieldCodec<global::shared.InputFrameDownsync> _repeated_inputFrameDownsyncBatch_codec
        = pb::FieldCodec.ForMessage(34, global::shared.InputFrameDownsync.Parser);
    private readonly pbc::RepeatedField<global::shared.InputFrameDownsync> inputFrameDownsyncBatch_ = new pbc::RepeatedField<global::shared.InputFrameDownsync>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.InputFrameDownsync> InputFrameDownsyncBatch {
      get { return inputFrameDownsyncBatch_; }
    }

    /// <summary>Field number for the "bciFrame" field.</summary>
    public const int BciFrameFieldNumber = 5;
    private global::shared.BattleColliderInfo bciFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.BattleColliderInfo BciFrame {
      get { return bciFrame_; }
      set {
        bciFrame_ = value;
      }
    }

    /// <summary>Field number for the "peerJoinIndex" field.</summary>
    public const int PeerJoinIndexFieldNumber = 6;
    private int peerJoinIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PeerJoinIndex {
      get { return peerJoinIndex_; }
      set {
        peerJoinIndex_ = value;
      }
    }

    /// <summary>Field number for the "errMsg" field.</summary>
    public const int ErrMsgFieldNumber = 7;
    private string errMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrMsg {
      get { return errMsg_; }
      set {
        errMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WsResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WsResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ret != other.Ret) return false;
      if (Act != other.Act) return false;
      if (!object.Equals(Rdf, other.Rdf)) return false;
      if(!inputFrameDownsyncBatch_.Equals(other.inputFrameDownsyncBatch_)) return false;
      if (!object.Equals(BciFrame, other.BciFrame)) return false;
      if (PeerJoinIndex != other.PeerJoinIndex) return false;
      if (ErrMsg != other.ErrMsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ret != 0) hash ^= Ret.GetHashCode();
      if (Act != 0) hash ^= Act.GetHashCode();
      if (rdf_ != null) hash ^= Rdf.GetHashCode();
      hash ^= inputFrameDownsyncBatch_.GetHashCode();
      if (bciFrame_ != null) hash ^= BciFrame.GetHashCode();
      if (PeerJoinIndex != 0) hash ^= PeerJoinIndex.GetHashCode();
      if (ErrMsg.Length != 0) hash ^= ErrMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Act != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Act);
      }
      if (rdf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rdf);
      }
      inputFrameDownsyncBatch_.WriteTo(output, _repeated_inputFrameDownsyncBatch_codec);
      if (bciFrame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BciFrame);
      }
      if (PeerJoinIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PeerJoinIndex);
      }
      if (ErrMsg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ErrMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ret != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Ret);
      }
      if (Act != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Act);
      }
      if (rdf_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rdf);
      }
      inputFrameDownsyncBatch_.WriteTo(ref output, _repeated_inputFrameDownsyncBatch_codec);
      if (bciFrame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BciFrame);
      }
      if (PeerJoinIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PeerJoinIndex);
      }
      if (ErrMsg.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ErrMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ret != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ret);
      }
      if (Act != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Act);
      }
      if (rdf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rdf);
      }
      size += inputFrameDownsyncBatch_.CalculateSize(_repeated_inputFrameDownsyncBatch_codec);
      if (bciFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BciFrame);
      }
      if (PeerJoinIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PeerJoinIndex);
      }
      if (ErrMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WsResp other) {
      if (other == null) {
        return;
      }
      if (other.Ret != 0) {
        Ret = other.Ret;
      }
      if (other.Act != 0) {
        Act = other.Act;
      }
      if (other.rdf_ != null) {
        if (rdf_ == null) {
          Rdf = new global::shared.RoomDownsyncFrame();
        }
        Rdf.MergeFrom(other.Rdf);
      }
      inputFrameDownsyncBatch_.Add(other.inputFrameDownsyncBatch_);
      if (other.bciFrame_ != null) {
        if (bciFrame_ == null) {
          BciFrame = new global::shared.BattleColliderInfo();
        }
        BciFrame.MergeFrom(other.BciFrame);
      }
      if (other.PeerJoinIndex != 0) {
        PeerJoinIndex = other.PeerJoinIndex;
      }
      if (other.ErrMsg.Length != 0) {
        ErrMsg = other.ErrMsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Act = input.ReadInt32();
            break;
          }
          case 26: {
            if (rdf_ == null) {
              Rdf = new global::shared.RoomDownsyncFrame();
            }
            input.ReadMessage(Rdf);
            break;
          }
          case 34: {
            inputFrameDownsyncBatch_.AddEntriesFrom(input, _repeated_inputFrameDownsyncBatch_codec);
            break;
          }
          case 42: {
            if (bciFrame_ == null) {
              BciFrame = new global::shared.BattleColliderInfo();
            }
            input.ReadMessage(BciFrame);
            break;
          }
          case 48: {
            PeerJoinIndex = input.ReadInt32();
            break;
          }
          case 58: {
            ErrMsg = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Ret = input.ReadInt32();
            break;
          }
          case 16: {
            Act = input.ReadInt32();
            break;
          }
          case 26: {
            if (rdf_ == null) {
              Rdf = new global::shared.RoomDownsyncFrame();
            }
            input.ReadMessage(Rdf);
            break;
          }
          case 34: {
            inputFrameDownsyncBatch_.AddEntriesFrom(ref input, _repeated_inputFrameDownsyncBatch_codec);
            break;
          }
          case 42: {
            if (bciFrame_ == null) {
              BciFrame = new global::shared.BattleColliderInfo();
            }
            input.ReadMessage(BciFrame);
            break;
          }
          case 48: {
            PeerJoinIndex = input.ReadInt32();
            break;
          }
          case 58: {
            ErrMsg = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill(Skill other) : this() {
      battleLocalId_ = other.battleLocalId_;
      recoveryFrames_ = other.recoveryFrames_;
      recoveryFramesOnBlock_ = other.recoveryFramesOnBlock_;
      recoveryFramesOnHit_ = other.recoveryFramesOnHit_;
      triggerType_ = other.triggerType_;
      boundChState_ = other.boundChState_;
      mpDelta_ = other.mpDelta_;
      hits_ = other.hits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "battleLocalId" field.</summary>
    public const int BattleLocalIdFieldNumber = 1;
    private int battleLocalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BattleLocalId {
      get { return battleLocalId_; }
      set {
        battleLocalId_ = value;
      }
    }

    /// <summary>Field number for the "recoveryFrames" field.</summary>
    public const int RecoveryFramesFieldNumber = 2;
    private int recoveryFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoveryFrames {
      get { return recoveryFrames_; }
      set {
        recoveryFrames_ = value;
      }
    }

    /// <summary>Field number for the "recoveryFramesOnBlock" field.</summary>
    public const int RecoveryFramesOnBlockFieldNumber = 3;
    private int recoveryFramesOnBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoveryFramesOnBlock {
      get { return recoveryFramesOnBlock_; }
      set {
        recoveryFramesOnBlock_ = value;
      }
    }

    /// <summary>Field number for the "recoveryFramesOnHit" field.</summary>
    public const int RecoveryFramesOnHitFieldNumber = 4;
    private int recoveryFramesOnHit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecoveryFramesOnHit {
      get { return recoveryFramesOnHit_; }
      set {
        recoveryFramesOnHit_ = value;
      }
    }

    /// <summary>Field number for the "triggerType" field.</summary>
    public const int TriggerTypeFieldNumber = 5;
    private global::shared.SkillTriggerType triggerType_ = global::shared.SkillTriggerType.RisingEdge;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.SkillTriggerType TriggerType {
      get { return triggerType_; }
      set {
        triggerType_ = value;
      }
    }

    /// <summary>Field number for the "boundChState" field.</summary>
    public const int BoundChStateFieldNumber = 6;
    private global::shared.CharacterState boundChState_ = global::shared.CharacterState.Idle1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.CharacterState BoundChState {
      get { return boundChState_; }
      set {
        boundChState_ = value;
      }
    }

    /// <summary>Field number for the "mpDelta" field.</summary>
    public const int MpDeltaFieldNumber = 7;
    private int mpDelta_;
    /// <summary>
    /// Usually used as "mp consumption"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MpDelta {
      get { return mpDelta_; }
      set {
        mpDelta_ = value;
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 1024;
    private static readonly pb::FieldCodec<global::shared.BulletConfig> _repeated_hits_codec
        = pb::FieldCodec.ForMessage(8194, global::shared.BulletConfig.Parser);
    private readonly pbc::RepeatedField<global::shared.BulletConfig> hits_ = new pbc::RepeatedField<global::shared.BulletConfig>();
    /// <summary>
    ///*
    ///[WARN] Multihit of a fireball is more difficult to handle than that of melee, because we have to count from the fireball's first hit; the situation becomes even more complicated when a multihit fireball is in a crowd -- remains to be designed
    ///
    ///Types of fireball multihit-singlebullet
    ///a. References the emission frame
    ///b. References the first hit only when actually hit
    ///c. References the first hit even if blocked
    ///d. References the prev hit only when actually hit
    ///e. References the prev hit even if blocked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::shared.BulletConfig> Hits {
      get { return hits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BattleLocalId != other.BattleLocalId) return false;
      if (RecoveryFrames != other.RecoveryFrames) return false;
      if (RecoveryFramesOnBlock != other.RecoveryFramesOnBlock) return false;
      if (RecoveryFramesOnHit != other.RecoveryFramesOnHit) return false;
      if (TriggerType != other.TriggerType) return false;
      if (BoundChState != other.BoundChState) return false;
      if (MpDelta != other.MpDelta) return false;
      if(!hits_.Equals(other.hits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BattleLocalId != 0) hash ^= BattleLocalId.GetHashCode();
      if (RecoveryFrames != 0) hash ^= RecoveryFrames.GetHashCode();
      if (RecoveryFramesOnBlock != 0) hash ^= RecoveryFramesOnBlock.GetHashCode();
      if (RecoveryFramesOnHit != 0) hash ^= RecoveryFramesOnHit.GetHashCode();
      if (TriggerType != global::shared.SkillTriggerType.RisingEdge) hash ^= TriggerType.GetHashCode();
      if (BoundChState != global::shared.CharacterState.Idle1) hash ^= BoundChState.GetHashCode();
      if (MpDelta != 0) hash ^= MpDelta.GetHashCode();
      hash ^= hits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BattleLocalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BattleLocalId);
      }
      if (RecoveryFrames != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RecoveryFrames);
      }
      if (RecoveryFramesOnBlock != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RecoveryFramesOnBlock);
      }
      if (RecoveryFramesOnHit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RecoveryFramesOnHit);
      }
      if (TriggerType != global::shared.SkillTriggerType.RisingEdge) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TriggerType);
      }
      if (BoundChState != global::shared.CharacterState.Idle1) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BoundChState);
      }
      if (MpDelta != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MpDelta);
      }
      hits_.WriteTo(output, _repeated_hits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BattleLocalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BattleLocalId);
      }
      if (RecoveryFrames != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RecoveryFrames);
      }
      if (RecoveryFramesOnBlock != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RecoveryFramesOnBlock);
      }
      if (RecoveryFramesOnHit != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RecoveryFramesOnHit);
      }
      if (TriggerType != global::shared.SkillTriggerType.RisingEdge) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TriggerType);
      }
      if (BoundChState != global::shared.CharacterState.Idle1) {
        output.WriteRawTag(48);
        output.WriteEnum((int) BoundChState);
      }
      if (MpDelta != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MpDelta);
      }
      hits_.WriteTo(ref output, _repeated_hits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BattleLocalId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleLocalId);
      }
      if (RecoveryFrames != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecoveryFrames);
      }
      if (RecoveryFramesOnBlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecoveryFramesOnBlock);
      }
      if (RecoveryFramesOnHit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecoveryFramesOnHit);
      }
      if (TriggerType != global::shared.SkillTriggerType.RisingEdge) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TriggerType);
      }
      if (BoundChState != global::shared.CharacterState.Idle1) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BoundChState);
      }
      if (MpDelta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MpDelta);
      }
      size += hits_.CalculateSize(_repeated_hits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.BattleLocalId != 0) {
        BattleLocalId = other.BattleLocalId;
      }
      if (other.RecoveryFrames != 0) {
        RecoveryFrames = other.RecoveryFrames;
      }
      if (other.RecoveryFramesOnBlock != 0) {
        RecoveryFramesOnBlock = other.RecoveryFramesOnBlock;
      }
      if (other.RecoveryFramesOnHit != 0) {
        RecoveryFramesOnHit = other.RecoveryFramesOnHit;
      }
      if (other.TriggerType != global::shared.SkillTriggerType.RisingEdge) {
        TriggerType = other.TriggerType;
      }
      if (other.BoundChState != global::shared.CharacterState.Idle1) {
        BoundChState = other.BoundChState;
      }
      if (other.MpDelta != 0) {
        MpDelta = other.MpDelta;
      }
      hits_.Add(other.hits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BattleLocalId = input.ReadInt32();
            break;
          }
          case 16: {
            RecoveryFrames = input.ReadInt32();
            break;
          }
          case 24: {
            RecoveryFramesOnBlock = input.ReadInt32();
            break;
          }
          case 32: {
            RecoveryFramesOnHit = input.ReadInt32();
            break;
          }
          case 40: {
            TriggerType = (global::shared.SkillTriggerType) input.ReadEnum();
            break;
          }
          case 48: {
            BoundChState = (global::shared.CharacterState) input.ReadEnum();
            break;
          }
          case 56: {
            MpDelta = input.ReadInt32();
            break;
          }
          case 8194: {
            hits_.AddEntriesFrom(input, _repeated_hits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BattleLocalId = input.ReadInt32();
            break;
          }
          case 16: {
            RecoveryFrames = input.ReadInt32();
            break;
          }
          case 24: {
            RecoveryFramesOnBlock = input.ReadInt32();
            break;
          }
          case 32: {
            RecoveryFramesOnHit = input.ReadInt32();
            break;
          }
          case 40: {
            TriggerType = (global::shared.SkillTriggerType) input.ReadEnum();
            break;
          }
          case 48: {
            BoundChState = (global::shared.CharacterState) input.ReadEnum();
            break;
          }
          case 56: {
            MpDelta = input.ReadInt32();
            break;
          }
          case 8194: {
            hits_.AddEntriesFrom(ref input, _repeated_hits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FrameLog : pb::IMessage<FrameLog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrameLog> _parser = new pb::MessageParser<FrameLog>(() => new FrameLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FrameLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::shared.RoomDownsyncFrameReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameLog(FrameLog other) : this() {
      rdf_ = other.rdf_ != null ? other.rdf_.Clone() : null;
      actuallyUsedIdf_ = other.actuallyUsedIdf_ != null ? other.actuallyUsedIdf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrameLog Clone() {
      return new FrameLog(this);
    }

    /// <summary>Field number for the "rdf" field.</summary>
    public const int RdfFieldNumber = 1;
    private global::shared.RoomDownsyncFrame rdf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.RoomDownsyncFrame Rdf {
      get { return rdf_; }
      set {
        rdf_ = value;
      }
    }

    /// <summary>Field number for the "actuallyUsedIdf" field.</summary>
    public const int ActuallyUsedIdfFieldNumber = 2;
    private global::shared.InputFrameDownsync actuallyUsedIdf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::shared.InputFrameDownsync ActuallyUsedIdf {
      get { return actuallyUsedIdf_; }
      set {
        actuallyUsedIdf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FrameLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FrameLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Rdf, other.Rdf)) return false;
      if (!object.Equals(ActuallyUsedIdf, other.ActuallyUsedIdf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rdf_ != null) hash ^= Rdf.GetHashCode();
      if (actuallyUsedIdf_ != null) hash ^= ActuallyUsedIdf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rdf_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rdf);
      }
      if (actuallyUsedIdf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActuallyUsedIdf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rdf_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Rdf);
      }
      if (actuallyUsedIdf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActuallyUsedIdf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rdf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rdf);
      }
      if (actuallyUsedIdf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActuallyUsedIdf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FrameLog other) {
      if (other == null) {
        return;
      }
      if (other.rdf_ != null) {
        if (rdf_ == null) {
          Rdf = new global::shared.RoomDownsyncFrame();
        }
        Rdf.MergeFrom(other.Rdf);
      }
      if (other.actuallyUsedIdf_ != null) {
        if (actuallyUsedIdf_ == null) {
          ActuallyUsedIdf = new global::shared.InputFrameDownsync();
        }
        ActuallyUsedIdf.MergeFrom(other.ActuallyUsedIdf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rdf_ == null) {
              Rdf = new global::shared.RoomDownsyncFrame();
            }
            input.ReadMessage(Rdf);
            break;
          }
          case 18: {
            if (actuallyUsedIdf_ == null) {
              ActuallyUsedIdf = new global::shared.InputFrameDownsync();
            }
            input.ReadMessage(ActuallyUsedIdf);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rdf_ == null) {
              Rdf = new global::shared.RoomDownsyncFrame();
            }
            input.ReadMessage(Rdf);
            break;
          }
          case 18: {
            if (actuallyUsedIdf_ == null) {
              ActuallyUsedIdf = new global::shared.InputFrameDownsync();
            }
            input.ReadMessage(ActuallyUsedIdf);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
